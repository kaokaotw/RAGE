import java.util.*

enum class EventID {
    E_HEART_BEAT(0),
    E_ACCEPT_CONNECTION_NOT(1),    // server -> client connect 요청을 받은 곳에 새로운 보안키를 전달.
    E_CONNECTION_LOST_NOT(2),
    E_UDP_PORT_NOT(3),             // server -> client UDP 패킷에 찍힌 포트번호를 TCP로 알려줌.
    E_DISABLE_HB_CHECK_REQ(4),
    E_LOG_NOT(5),
    E_RESERVE_DESTROY(6),

    //{{ 2009. 12. 16  최육사	동접툴
    E_TOOL_GET_CCU_INFO_REQ(7),
    E_TOOL_GET_CCU_INFO_ACK(8),
    //}}

    //{{ 2011. 01. 13 김민성	동접 모니터링 툴
    E_TOOL_CHECK_LOGIN_REQ(9),
    E_TOOL_CHECK_LOGIN_ACK(10),

    E_TOOL_SERVER_LIST_REQ(11),
    E_TOOL_SERVER_LIST_ACK(12),
    //}}

    E_CHECK_SEQUENCE_COUNT_NOT(13),
    //{{ 2012. 04. 24	최육사	UDP릴레이 퍼포먼스 체크
//#ifdef SERV_UDP_RELAY_CHECKER
    E_UDP_RELAY_SERVER_CHECK_PACKET_NOT(14),
    E_CONNECT_RELAY_ACK(15),
    //#endif SERV_UDP_RELAY_CHECKER
    //}}
    //{{ 2012. 07. 18	최육사		재접속 로직
//#ifdef SERV_RECONNECT_LOGIC_FOR_DDOS_SOLUTION
    E_CHECK_DDOS_GUARD_REQ(),
    E_CHECK_DDOS_GUARD_ACK(),
    E_CH_CONNECTION_LOST_FOR_DDOS_GUARD_NOT(),
    E_GS_CONNECTION_LOST_FOR_DDOS_GUARD_NOT(),
//#endif SERV_RECONNECT_LOGIC_FOR_DDOS_SOLUTION
    //}}

    E_SYSTEM_EVENT_ID_END(16),

    ////////////////////////EventID_Client start/////////////////////

    //////////////////////////////////////////////////////////////////////////
    // dummy packet enum
    EGS_GOOD_JOB_1_REQ(17),
    EGS_GOOD_JOB_2_REQ(18),
    EGS_GOOD_JOB_3_REQ(19),
    EGS_GOOD_JOB_4_REQ(20),
    EGS_GOOD_JOB_5_REQ(21),
    //////////////////////////////////////////////////////////////////////////

    EGS_CONNECT_REQ(26),
    EGS_CONNECT_ACK(27),

    EGS_NEW_USER_JOIN_REQ(28),
    EGS_NEW_USER_JOIN_ACK(29),

    EGS_VERIFY_ACCOUNT_REQ(30),
    EGS_VERIFY_ACCOUNT_ACK(31),

    EGS_SEND_STATISTICS_LOCLOG_REQ(32),
    EGS_SEND_STATISTICS_DBLOG_REQ(33),

    EGS_MY_UNIT_AND_INVENTORY_INFO_LIST_REQ(1850),
    EGS_MY_UNIT_AND_INVENTORY_INFO_LIST_ACK(1207),
    EGS_MY_UNIT_AND_INVENTORY_INFO_LIST_ACK2(1208),
    EGS_MY_UNIT_AND_INVENTORY_INFO_LIST_ACK3(1209),

    EGS_CREATE_UNIT_REQ(),
    EGS_CREATE_UNIT_ACK(),

    EGS_DELETE_UNIT_REQ(),
    EGS_DELETE_UNIT_ACK(),

    EGS_SELECT_UNIT_REQ(),
    EGS_SELECT_UNIT_ACK(),

    //{{ 2012. 12. 10  캐릭터 선택 패킷 분할 - 김민성
//#ifdef SERV_SELECT_UNIT_PACKET_DIVISION
    EGS_SELECT_UNIT_1_NOT(),
    EGS_SELECT_UNIT_2_NOT(),
    EGS_SELECT_UNIT_3_NOT(),
    EGS_SELECT_UNIT_4_NOT(),
    EGS_SELECT_UNIT_5_NOT(),
//#endif SERV_SELECT_UNIT_PACKET_DIVISION
    //}

    //{{ 2010. 01. 04  최육사	인벤토리 기능개선
    EGS_GET_MY_INVENTORY_REQ(38),
    EGS_GET_MY_INVENTORY_ACK(39),
    EGS_SELECT_UNIT_INVENTORY_INFO_NOT(40),
    //}}

    EGS_STATE_CHANGE_SERVER_SELECT_REQ(53),		//서버군 선택 스테이트로 이동
    EGS_STATE_CHANGE_SERVER_SELECT_ACK(54),

    EGS_GET_SERVER_SET_DATA_REQ(55),			//서버군 데이터 리스트 받아오기
    EGS_GET_SERVER_SET_DATA_ACK(56),

    EGS_SELECT_SERVER_SET_REQ(57),				//서버군 선택
    EGS_SELECT_SERVER_SET_ACK(58),

    //{{ 2009. 5. 26  최육사	채널이동
    EGS_CHECK_CHANNEL_CHANGE_REQ(59),
    EGS_CHECK_CHANNEL_CHANGE_ACK(60),

    EGS_CONNECT_CHANNEL_CHANGE_REQ(61),
    EGS_CONNECT_CHANNEL_CHANGE_ACK(62),

    EGS_JOIN_FIELD_CHANNEL_CHANGE_REQ(63),
    EGS_JOIN_FIELD_CHANNEL_CHANGE_ACK(64),
    //}}

    //{{ 2009. 2. 13  최육사	채널 리스트
    ECH_GET_CHANNEL_LIST_REQ(65),
    ECH_GET_CHANNEL_LIST_ACK(66),
    ECH_GET_CHANNEL_LIST_NOT(67),

    EGS_GET_CHANNEL_LIST_REQ(68),
    EGS_GET_CHANNEL_LIST_ACK(69),
    //}}

    EGS_STATE_CHANGE_UNIT_SELECT_REQ(70),
    EGS_STATE_CHANGE_UNIT_SELECT_ACK(71),

    EGS_ENTER_EQUIP_SHOP_REQ(60),
    EGS_ENTER_EQUIP_SHOP_ACK(61),

    EGS_ENTER_NPC_HOUSE_REQ(62),
    EGS_ENTER_NPC_HOUSE_ACK(63),

    //{{ 2008. 11. 25  최육사
    EGS_OPEN_PVP_ROOM_LIST_REQ(),
    EGS_OPEN_PVP_ROOM_LIST_ACK(),
    //}}

    //{{ 2008. 11. 25  최육사
    EGS_CHANGE_PVP_ROOM_LIST_REQ(),
    EGS_CHANGE_PVP_ROOM_LIST_ACK(),

    EGS_INVITE_PVP_ROOM_REQ(),
    EGS_INVITE_PVP_ROOM_ACK(69),
    EGS_INVITE_PVP_ROOM_NOT(70),
    //}}

    EGS_ROOM_LIST_REQ(71),
    EGS_ROOM_LIST_ACK(72),

    EGS_SQUARE_LIST_REQ(73),
    EGS_SQUARE_LIST_ACK(74),

    //{{ 2008. 11. 26  최육사	파티 리스트
    EGS_PARTY_LIST_REQ(75),
    EGS_PARTY_LIST_ACK(76),
    //}}

    //////////////////////////////////////////////////////////////////////////
    // dummy packet enum
    EGS_GOOD_JOB_6_REQ(77),
    EGS_GOOD_JOB_7_REQ(78),
    EGS_GOOD_JOB_8_REQ(79),
    EGS_GOOD_JOB_9_REQ(80),
    EGS_GOOD_JOB_10_REQ(81),
    //////////////////////////////////////////////////////////////////////////

    EGS_CREATE_ROOM_REQ(82),
    EGS_CREATE_ROOM_ACK(83),

    EGS_CREATE_TUTORIAL_ROOM_REQ(84),
    EGS_CREATE_TUTORIAL_ROOM_ACK(85),

    EGS_JOIN_ROOM_REQ(86),
    EGS_JOIN_ROOM_ACK(87),
    EGS_JOIN_ROOM_NOT(88),

    EGS_JOIN_SQUARE_REQ(89),
    EGS_JOIN_SQUARE_ACK(90),
    EGS_JOIN_SQUARE_NOT(91),

    EGS_QUICK_JOIN_REQ(92),
    EGS_QUICK_JOIN_ACK(93),

    EGS_LEAVE_ROOM_REQ(94),
    EGS_LEAVE_ROOM_ACK(95),
    EGS_LEAVE_ROOM_NOT(96),

    EGS_LEAVE_SQUARE_REQ(97),
    EGS_LEAVE_SQUARE_ACK(98),
    EGS_LEAVE_SQUARE_NOT(99),

    EGS_LEAVE_GAME_REQ(100),
    EGS_LEAVE_GAME_ACK(101),
    EGS_LEAVE_GAME_NOT(102),

    EGS_BAN_USER_REQ(103),
    EGS_BAN_USER_ACK(104),
    EGS_BAN_USER_NOT(105),

    EGS_CHANGE_TEAM_REQ(106),
    EGS_CHANGE_TEAM_ACK(107),
    EGS_CHANGE_TEAM_NOT(108),

    EGS_CHANGE_READY_REQ(109),
    EGS_CHANGE_READY_ACK(110),
    EGS_CHANGE_READY_NOT(111),

    EGS_CHANGE_PITIN_REQ(112),	//방안에서 내정보창에 들어갔을때..
    EGS_CHANGE_PITIN_ACK(113),
    EGS_CHANGE_PITIN_NOT(114),

    EGS_CHANGE_MAP_REQ(115),
    EGS_CHANGE_MAP_ACK(116),
    EGS_CHANGE_MAP_NOT(117),

    EGS_CHANGE_SLOT_OPEN_REQ(118),
    EGS_CHANGE_SLOT_OPEN_ACK(119),
    EGS_CHANGE_SLOT_OPEN_NOT(120),

    EGS_CHANGE_PLAY_TIME_LIMIT_REQ(121),
    EGS_CHANGE_PLAY_TIME_LIMIT_ACK(122),
    EGS_CHANGE_PLAY_TIME_LIMIT_NOT(123),

    EGS_CHANGE_WINNING_NUM_KILL_REQ(124),
    EGS_CHANGE_WINNING_NUM_KILL_ACK(125),
    EGS_CHANGE_WINNING_NUM_KILL_NOT(126),

    EGS_CHAT_REQ(127),
    EGS_CHAT_ACK(128),
    EGS_CHAT_NOT(129),

    EGS_CHANGE_MOTION_REQ(130),
    EGS_CHANGE_MOTION_ACK(131),
    EGS_CHANGE_MOTION_NOT(132),

    EGS_STATE_CHANGE_GAME_START_REQ(133), //호스트가 처음 게임 시작을 누름
    EGS_STATE_CHANGE_GAME_START_ACK(134),
    EGS_STATE_CHANGE_GAME_START_NOT(135),

    EGS_STATE_CHANGE_GAME_INTRUDE_REQ(136), //난입자가 난입 버튼을 누름
    EGS_STATE_CHANGE_GAME_INTRUDE_ACK(137),
    EGS_STATE_CHANGE_GAME_INTRUDE_NOT(138),

    EGS_GAME_LOADING_REQ(139),
    EGS_GAME_LOADING_ACK(140),
    EGS_GAME_LOADING_NOT(141),
    EGS_GAME_LOADING_ALL_UNIT_OK_NOT(142),

    EGS_GAME_P2P_CONNECT_RESULT_REQ(143),
    EGS_GAME_P2P_CONNECT_RESULT_ACK(144),

    EGS_PLAY_START_NOT(145),
    EGS_INTRUDE_START_REQ(146), //난입자가 로딩(), 커넥트 끝나면
    EGS_INTRUDE_START_ACK(147), //난입자가 로딩(), 커넥트 끝나면
    EGS_INTRUDE_START_NOT(148), //난입 성공

    EGS_CURRENT_KILL_SCORE_NOT(149),
    EGS_CURRENT_TEAM_KILL_SCORE_NOT(150),

    EGS_REMAINING_PLAY_TIME_NOT(151),
    EGS_PLAY_TIME_OUT_NOT(152),

    EGS_MY_USER_UNIT_INFO_TO_SERVER_REQ(153),
    EGS_MY_USER_UNIT_INFO_TO_SERVER_ACK(154),
//    EGS_MY_USER_UNIT_INFO_TO_SERVER_NOT(),	//던전에서 정보수집후 STATE를 이동하기위해 동기화

    //{{ 2008. 9. 19  최육사	통계
    EGS_DUNGEON_PLAY_INFO_TO_SERVER_NOT(155),
    //}}

    EGS_USER_UNIT_RE_BIRTH_POS_REQ(156),
    EGS_USER_UNIT_RE_BIRTH_POS_ACK(157),

    //EGS_USER_UNIT_RE_BIRTH_REQ(),
    //EGS_USER_UNIT_RE_BIRTH_ACK(),
    EGS_USER_UNIT_RE_BIRTH_NOT(158),

    EGS_USER_UNIT_CREATE_REQ(159),
    EGS_USER_UNIT_CREATE_ACK(160),
    EGS_USER_UNIT_CREATE_NOT(161),

    EGS_USER_UNIT_DIE_REQ(162),
    EGS_USER_UNIT_DIE_ACK(163),
    EGS_USER_UNIT_DIE_NOT(164),

    EGS_USER_UNIT_DIE_COMPLETE_REQ(165),
    EGS_USER_UNIT_DIE_COMPLETE_ACK(166),
    EGS_USER_UNIT_DIE_COMPLETE_NOT(167),

    EGS_NPC_UNIT_CREATE_REQ(168), //호스트가 보냄(), 몬스터 위치(), 종류(),
    EGS_NPC_UNIT_CREATE_ACK(169),
    EGS_NPC_UNIT_CREATE_NOT(170), //몬스터 UID를 추가해서 보냄

    EGS_NPC_UNIT_DIE_REQ(171), //몬스터 UID
    EGS_NPC_UNIT_DIE_ACK(172),
    EGS_NPC_UNIT_DIE_NOT(173),

    EGS_DUNGEON_STAGE_LOAD_REQ(174), //호스트가 날림(), 스테이지 번호 있음(), 몬스터 개수
    EGS_DUNGEON_STAGE_LOAD_ACK(175),
    EGS_DUNGEON_STAGE_LOAD_NOT(176), //몬스터 UID 발급

    EGS_DUNGEON_STAGE_LOAD_COMPLETE_REQ(177),
    EGS_DUNGEON_STAGE_LOAD_COMPLETE_ACK(178),
    EGS_DUNGEON_STAGE_LOAD_COMPLETE_NOT(179),

    EGS_DUNGEON_STAGE_START_NOT(180), //스테이지 번호

    EGS_DUNGEON_SUB_STAGE_OPEN_REQ(181), //호스트가 날림(), 서브 스테이지 번호
    EGS_DUNGEON_SUB_STAGE_OPEN_ACK(182),
    EGS_DUNGEON_SUB_STAGE_OPEN_NOT(183),// 다음 스테이지의 스타트 라인을 연다

    EGS_DUNGEON_SUB_STAGE_GO_NEXT_REQ(184), //내가 다음 스테이지 라인으로 넘어갔다 장막 생성
    EGS_DUNGEON_SUB_STAGE_GO_NEXT_ACK(185),
    EGS_DUNGEON_SUB_STAGE_GO_NEXT_ALL_NOT(186), //모두 넘어왔다 이전 스테이지 라인을 끈다

    EGS_DUNGEON_SUB_STAGE_LOAD_COMPLETE_REQ(187), //몬스터 생성이 끝나면 각자 날림
    EGS_DUNGEON_SUB_STAGE_LOAD_COMPLETE_ACK(188),

    EGS_DUNGEON_SUB_STAGE_START_NOT(189), //장막 열림

    EGS_END_GAME_REQ(190), //호스트만), 던전에서 이겼을 때
    EGS_END_GAME_ACK(191),
    EGS_END_GAME_NOT(192),

    EGS_END_GAME_DUNGEON_RESULT_DATA_NOT(193),
    EGS_END_GAME_PVP_RESULT_DATA_NOT(194),

    EGS_STATE_CHANGE_RESULT_REQ(195),
    EGS_STATE_CHANGE_RESULT_ACK(196),
    EGS_STATE_CHANGE_RESULT_NOT(197),

    EGS_START_REWARD_BOX_SELECT_REQ(198),
    EGS_START_REWARD_BOX_SELECT_ACK(199),
    EGS_START_REWARD_BOX_SELECT_NOT(200),

    EGS_SELECT_REWARD_BOX_REQ(201),
    EGS_SELECT_REWARD_BOX_ACK(202),
    EGS_SELECT_REWARD_BOX_NOT(203),

    EGS_CHANGE_DUNGEON_DIFFICULTY_REQ(204),
    EGS_CHANGE_DUNGEON_DIFFICULTY_ACK(205),
    EGS_CHANGE_DUNGEON_DIFFICULTY_NOT(206),

    EGS_DROP_ITEM_NOT(207),
    EGS_GET_ITEM_REQ(208),
    EGS_GET_ITEM_ACK(209),
    EGS_GET_ITEM_NOT(210),

    //{{ 2009. 5. 11  최육사	실시간아이템
    EGS_GET_ITEM_REALTIME_NOT(211),
    EGS_GET_ITEM_TEMP_INVENTORY_NOT(212),
    EGS_GET_TEMP_ITEM_REQ(213),
    EGS_GET_TEMP_ITEM_ACK(214),
    EGS_DELETE_TEMP_ITEM_REQ(215),
    EGS_DELETE_TEMP_ITEM_ACK(216),
    //}}

    EGS_UPDATE_UNIT_INFO_NOT(217),

    EGS_REFRESH_ROOM_REQ(218),
    EGS_REFRESH_ROOM_ACK(219),

    EGS_NOTIFY_MSG_REQ(220),
    EGS_NOTIFY_MSG_NOT(221),

    EGS_ADMIN_SERVER_STATUS_REQ(222),
    EGS_ADMIN_SERVER_STATUS_ACK(223),

    EGS_CLIENT_QUIT_REQ(224),
    EGS_CLIENT_QUIT_ACK(225),

    EGS_ADMIN_MODIFY_UNIT_LEVEL_REQ(226),
    EGS_ADMIN_MODIFY_UNIT_LEVEL_ACK(227),

    EGS_CHANGE_OPTION_PLAY_GUIDE_REQ(233),
    EGS_CHANGE_OPTION_PLAY_GUIDE_ACK(234),

    EGS_BUY_ED_ITEM_REQ(235),
    EGS_BUY_ED_ITEM_ACK(236),

    EGS_SELL_ED_ITEM_REQ(237),
    EGS_SELL_ED_ITEM_ACK(238),

    EGS_NEW_QUEST_REQ(239),
    EGS_NEW_QUEST_ACK(240),
    EGS_NEW_QUEST_NOT(241),

    EGS_UPDATE_QUEST_REQ(242),
    EGS_UPDATE_QUEST_ACK(243),
    EGS_UPDATE_QUEST_NOT(244),

    EGS_QUEST_COMPLETE_REQ(245),
    EGS_QUEST_COMPLETE_ACK(246),

    EGS_ADMIN_QUEST_COMPLETE_REQ(247),		//운영자 이상의 유저가 테스트를 하기위해 퀘스트 무조건 완료처리 하기위한..

    EGS_QUEST_COMPLETE_NOT(248),	// 선택보상 & 일반보상 처리후 유저정보 처리는 이패킷으로 한다.

    //{{ 2012. 04. 17	최육사	퀘스트 조건 마을 입장
//#ifdef SERV_ENTER_FIELD_QUEST_CLEAR
    EGS_ALL_COMPLETED_QUEST_COMPLETE_REQ(),
    EGS_ALL_COMPLETED_QUEST_COMPLETE_ACK(),
//#endif SERV_ENTER_FIELD_QUEST_CLEAR
    //}}

    EGS_GIVE_UP_QUEST_REQ(249),
//#ifdef SERV_GATHER_GIVE_UP_QUEST
    EGS_GATHER_GIVE_UP_QUEST_REQ(),
//#endif // SERV_GATHER_GIVE_UP_QUEST
    EGS_GIVE_UP_QUEST_ACK(250),

    EGS_TALK_WITH_NPC_REQ(251),
    EGS_TALK_WITH_NPC_ACK(252),

    //////////////////////////////////////////////////////////////////////////
    // dummy packet enum
    EGS_GOOD_JOB_11_REQ(253),
    EGS_GOOD_JOB_12_REQ(254),
    EGS_GOOD_JOB_13_REQ(255),
    EGS_GOOD_JOB_14_REQ(256),
    EGS_GOOD_JOB_15_REQ(257),
    //////////////////////////////////////////////////////////////////////////

    EGS_CHANGE_INVENTORY_SLOT_ITEM_REQ(258),
    EGS_CHANGE_INVENTORY_SLOT_ITEM_ACK(259),

    EGS_CHANGE_EQUIPPED_ITEM_IN_SQUARE_NOT(260),
    EGS_CHANGE_EQUIPPED_ITEM_IN_ROOM_NOT(261),
    //{{ 2008. 11. 30  최육사
    EGS_CHANGE_EQUIPPED_ITEM_IN_FIELD_NOT(262),
    //}}
    EGS_GAME_LOADING_TIME_OUT_NOT(263),

    EGS_DELETE_ITEM_REQ(264),
    EGS_DELETE_ITEM_ACK(265),

    EGS_ADMIN_CHANGE_AUTH_LEVEL_REQ(266),
    EGS_ADMIN_CHANGE_AUTH_LEVEL_ACK(267),

    EGS_ADMIN_GET_AUTH_LEVEL_LIST_REQ(268),
    EGS_ADMIN_GET_AUTH_LEVEL_LIST_ACK(269),

    EGS_CHECK_INVALID_ROOM_NOT(270),

    EGS_RESULT_SUCCESS_REQ(271),
    EGS_RESULT_SUCCESS_ACK(272),
    EGS_RESULT_ALL_UNIT_SUCCESS_NOT(273),

    EGS_USE_QUICK_SLOT_REQ(274),
    EGS_USE_QUICK_SLOT_ACK(275),
    EGS_USE_QUICK_SLOT_NOT(276),

    EGS_ADMIN_CHANGE_ED_REQ(277),
    EGS_ADMIN_CHANGE_ED_ACK(278),

    EGS_SEARCH_UNIT_REQ(279),	//유저찾기 기능(ACK : UNIT INFO 를 담아 보내준다)
    EGS_SEARCH_UNIT_ACK(280),

    //{{ 2009. 4. 17  최육사	접속중인 유저정보 얻기
    EGS_GET_CONNECTION_UNIT_INFO_REQ(281),
    EGS_GET_CONNECTION_UNIT_INFO_ACK(282),
    //}}

    //{{ 2009. 6. 23  최육사	엿보기
    EGS_WATCH_UNIT_REQ(283),
    EGS_WATCH_UNIT_ACK(284),
    //}}

    EGS_SQUARE_UNIT_SYNC_DATA_REQ(285), //광장유닛 정보
    EGS_SQUARE_UNIT_SYNC_DATA_NOT(286),

    EGS_GET_SKILL_REQ(287),
    EGS_GET_SKILL_ACK(288),

    EGS_CHANGE_SKILL_SLOT_REQ(289),
    EGS_CHANGE_SKILL_SLOT_ACK(290),
    EGS_CHANGE_SKILL_SLOT_NOT(291),

    EGS_ADMIN_CHANGE_SKILL_POINT_REQ(292),
    EGS_ADMIN_CHANGE_SKILL_POINT_ACK(293),

    EGS_ADMIN_INIT_SKILL_TREE_REQ(294),
    EGS_ADMIN_INIT_SKILL_TREE_ACK(295),

    EGS_INIT_SKILL_TREE_REQ(296),
    EGS_INIT_SKILL_TREE_ACK(297),

    // 스킬 되돌리기
    EGS_RESET_SKILL_REQ(298),
    EGS_RESET_SKILL_ACK(299),

    EGS_UPDATE_CASH_SKILL_POINT_NOT(300),			// 캐시스킬포인트를 구매하거나 사용했을 때 받는 패킷
    EGS_EXPIRE_CASH_SKILL_POINT_NOT(301),			// 캐시 스킬포인트가 만료 되었을 때

    EGS_EXPAND_SKILL_SLOT_NOT(302),					// 스킬 슬롯 B 확장 아이템을 샀을 때 가져왔을 때
    EGS_EXPIRE_SKILL_SLOT_NOT(303),					// 스킬 슬롯 B 확장 기간만료 되었을 때

    //{{ 2009. 8. 4  최육사		봉인스킬
    EGS_UNSEAL_SKILL_NOT(304),						// 스킬 봉인 해제 통보
    //}}

    EGS_ADMIN_KICK_USER_REQ(305),
    EGS_ADMIN_KICK_USER_ACK(306),
    ELG_ADMIN_KICK_USER_REQ(307),
    ELG_ADMIN_KICK_USER_ACK(308),

    // Party
    EGS_CREATE_PARTY_REQ(309),
    EGS_CREATE_PARTY_ACK(310),

    //// 파티리스트를 통해 들어오는 경우.
    EGS_JOIN_PARTY_REQ(311),
    EGS_JOIN_PARTY_ACK(312),
    EGS_JOIN_PARTY_NOT(313),
    EGS_JOIN_PARTY_INVITE_NOT(314),
    EGS_JOIN_PARTY_INVITE_REPLY_NOT(315),
    EGS_JOIN_PARTY_INVITE_DENY_NOT(316),			// 파티참가 요청자가 파티장에게 참가 신청한 후 time out 됐을 때 파티장이 받는 패킷

    EGS_LEAVE_PARTY_REQ(317),
    EGS_LEAVE_PARTY_ACK(318),
    EGS_LEAVE_PARTY_NOT(319),

    //// 파티장이 초대하는경우.
    EGS_INVITE_PARTY_REQ(320),
    EGS_INVITE_PARTY_ACK(321),
    EGS_INVITE_PARTY_NOT(322),
    EGS_INVITE_PARTY_REPLY_NOT(323),
    EGS_INVITE_PARTY_DENY_NOT(324),				// 파티장이 다른 사람에게 파티 참가 신청한 후 time out 됐을 때 파티장이 받는 패킷

    EGS_UPDATE_PARTY_USER_INFO_NOT(325),
    ////{{ 2009. 3. 31  최육사	파티유저
    EGS_UPDATE_PARTY_UID_NOT(326),
    ////}}

    EGS_PARTY_CHANGE_READY_REQ(327),
    EGS_PARTY_CHANGE_READY_ACK(328),
    EGS_PARTY_CHANGE_READY_NOT(329),

    EGS_PARTY_CHANGE_DUNGEON_REQ(330),
    EGS_PARTY_CHANGE_DUNGEON_ACK(331),
    EGS_PARTY_CHANGE_DUNGEON_NOT(332),

    //// 게임 시작
    EGS_PARTY_GAME_START_REQ(333),
    EGS_PARTY_GAME_START_ACK(334),
    EGS_PARTY_GAME_START_NOT(335),

    EGS_PARTY_TO_FIELD_MAP_REQ(336),
    EGS_PARTY_TO_FIELD_MAP_ACK(337),
    EGS_PARTY_TO_FIELD_MAP_NOT(338),

    //// 파티 이름변경.
    EGS_PARTY_CHANGE_NAME_REQ(339),
    EGS_PARTY_CHANGE_NAME_ACK(340),
    EGS_PARTY_CHANGE_NAME_NOT(341),

    //// 파티 공개설정 변경.
    EGS_PARTY_CHANGE_PUBLIC_REQ(342),
    EGS_PARTY_CHANGE_PUBLIC_ACK(343),
    EGS_PARTY_CHANGE_PUBLIC_NOT(344),

    //// 파티장 변경.
    EGS_PARTY_CHANGE_HOST_REQ(345),
    EGS_PARTY_CHANGE_HOST_ACK(346),
    EGS_PARTY_CHANGE_HOST_NOT(347),

    //// 파티원 강퇴.
    EGS_PARTY_BAN_USER_REQ(348),
    EGS_PARTY_BAN_USER_ACK(349),
    EGS_PARTY_BAN_USER_NOT(350),

    //// 던전게임 아이템 먹는 방식 결정.
    EGS_PARTY_CHANGE_GET_ITEM_TYPE_REQ(351),
    EGS_PARTY_CHANGE_GET_ITEM_TYPE_ACK(352),
    EGS_PARTY_CHANGE_GET_ITEM_TYPE_NOT(353),

    //// 던전게임 아이템 먹는 방식 결정.
    EGS_PARTY_CHANGE_NUM_OF_PER_REQ(354),
    EGS_PARTY_CHANGE_NUM_OF_PER_ACK(355),
    EGS_PARTY_CHANGE_NUM_OF_PER_NOT(356),

    ////{{ 2009. 4. 1  최육사		파티렙제
    EGS_PARTY_LIMIT_LEVEL_REQ(357),
    EGS_PARTY_LIMIT_LEVEL_ACK(358),
    EGS_PARTY_LIMIT_LEVEL_NOT(359),
    ////}}

    ////{{ 2009. 5. 1  최육사		파티 퀵조인
    EGS_PARTY_QUICK_JOIN_REQ(360),
    EGS_PARTY_QUICK_JOIN_ACK(361),
    ////}}

    //// 파티 유저 밴
    EGS_BAN_PARTY_USER_REQ(362),
    EGS_BAN_PARTY_USER_ACK(363),
    EGS_BAN_PARTY_USER_NOT(364),

    // +6

    EGS_RESURRECT_TO_CONTINUE_DUNGEON_REQ(370),
    EGS_RESURRECT_TO_CONTINUE_DUNGEON_ACK(371),
    EGS_RESURRECT_TO_CONTINUE_DUNGEON_NOT(372),

    // 블랙리스트
    EGS_NEW_BLACKLIST_USER_REQ(373),
    EGS_NEW_BLACKLIST_USER_ACK(374),
    EGS_DEL_BLACKLIST_USER_REQ(375),
    EGS_DEL_BLACKLIST_USER_ACK(376),

    EGS_UPDATE_COMMUNITY_OPTION_REQ(377),
    EGS_UPDATE_COMMUNITY_OPTION_ACK(378),

    EGS_SKIP_CONTINUE_DUNGEON_NOT(379),

    EGS_CHECK_SUM_REQ(380),
    EGS_CHECK_SUM_ACK(381),

    //korea nexon msg
    EGS_KNM_REQUEST_NEW_FRIEND_INFO_REQ(382),
    EGS_KNM_REQUEST_NEW_FRIEND_INFO_ACK(383),
    EGS_KNM_INVITE_REQ(384),
    EGS_KNM_INVITE_ACK(385),
    EGS_KNM_INVITE_NOT(386),
    EGS_KNM_INVITE_RESULT_NOT(387),
    EGS_KNM_TOGETHER_REQ(388),
    EGS_KNM_TOGETHER_ACK(389),

    // 개인 거래
    EGS_REQUEST_TRADE_REQ(390),
    EGS_REQUEST_TRADE_ACK(391),

    EGS_REQUEST_TRADE_NOT(392),
    EGS_REQUEST_TRADE_REPLY_NOT(393),
    EGS_REQUEST_TRADE_DENY_NOT(394),

    EGS_CREATE_TRADE_NOT(395),

    EGS_BREAK_TRADE_REQ(396),
    EGS_BREAK_TRADE_ACK(397),
    EGS_BREAK_TRADE_NOT(398),

    EGS_TRADE_USER_INFO_NOT(399),
    EGS_JOIN_TRADE_NOT(400),

    EGS_UPDATE_TRADE_ITEM_REQ(401),
    EGS_UPDATE_TRADE_ITEM_ACK(402),
    EGS_UPDATE_TRADE_ITEM_NOT(403),

    EGS_UPDATE_TRADE_ED_REQ(404),
    EGS_UPDATE_TRADE_ED_ACK(405),
    EGS_UPDATE_TRADE_ED_NOT(406),

    EGS_OFFER_TRADE_REQ(407),
    EGS_OFFER_TRADE_ACK(408),
    EGS_OFFER_TRADE_NOT(409),

    EGS_APPROVE_TRADE_REQ(),
    EGS_APPROVE_TRADE_ACK(411),
    EGS_APPROVE_TRADE_NOT(412),

    EGS_TRADE_COMPLETE_NOT(413),

    EGS_REPAIR_ITEM_REQ(414),
    EGS_REPAIR_ITEM_ACK(415),
    EGS_REPAIR_ITEM_NOT(416),

    EGS_CREATE_TC_ROOM_REQ(417),
    EGS_CREATE_TC_ROOM_ACK(418),

    EGS_END_TC_GAME_REQ(419), //훈련소 게임 끝났을때
    EGS_END_TC_GAME_ACK(420),

    EGS_SET_TC_REMAINING_TIME_REQ(421),
    EGS_SET_TC_REMAINING_TIME_ACK(422),

    EGS_LEAVE_TC_ROOM_REQ(423),
    EGS_LEAVE_TC_ROOM_ACK(424),

    EGS_OPEN_RANDOM_ITEM_REQ(425),
    EGS_OPEN_RANDOM_ITEM_ACK(426),

    EGS_ITEM_MANUFACTURE_REQ(427),
    EGS_ITEM_MANUFACTURE_ACK(428),

    EGS_KNPROTECT_AUTH_CHECK_NOT(429),
    EGS_KNPROTECT_USER_SHOWDOWN_NOT(430),

    ENX_USER_LOGIN_NOT(410),

    //게임중 추가 능력치 적용
    EGS_ADD_ON_STAT_REQ(432),
    EGS_ADD_ON_STAT_ACK(433),
    EGS_ADD_ON_STAT_NOT(434),

    EGS_APPLY_COUPON_REQ(435),
    EGS_APPLY_COUPON_ACK(436),

    EGS_PURCHASED_CASH_ITEM_LIST_REQ(437),
    EGS_PURCHASED_CASH_ITEM_LIST_ACK(438),

    EGS_GET_PURCHASED_CASH_ITEM_REQ(439),
    EGS_GET_PURCHASED_CASH_ITEM_ACK(440),

    EGS_FRAME_AVERAGE_REQ(441),
    EGS_FRAME_AVERAGE_ACK(442),

    EGS_CHANGE_NICK_NAME_REQ(443),
    EGS_CHANGE_NICK_NAME_ACK(444),

    EGS_ADMIN_CHANGE_SPIRIT_REQ(445),
    EGS_ADMIN_CHANGE_SPIRIT_ACK(446),

    EGS_ADMIN_SET_PC_BANG_REQ(447),
    EGS_ADMIN_SET_PC_BANG_ACK(448),

    EGS_ADMIN_CHANGE_VSPOINT_REQ(449),
    EGS_ADMIN_CHANGE_VSPOINT_ACK(450),

    EGS_CHECK_BALANCE_REQ(451),
    EGS_CHECK_BALANCE_ACK(452),

    //////////////////////////////////////////////////////////////////////////
    //[개인상점] Personal Shop packet
    EGS_CREATE_PERSONAL_SHOP_REQ(453),
    EGS_CREATE_PERSONAL_SHOP_ACK(454),

    EGS_REG_PERSONAL_SHOP_ITEM_REQ(455),
    EGS_REG_PERSONAL_SHOP_ITEM_ACK(456),

    EGS_BUY_PERSONAL_SHOP_ITEM_REQ(457),
    EGS_BUY_PERSONAL_SHOP_ITEM_ACK(458),
    EGS_BUY_PERSONAL_SHOP_ITEM_COMPLETE_NOT(459),

    EGS_UPDATE_PERSONAL_SHOP_ITEM_INFO_NOT(460),

    EGS_BREAK_PERSONAL_SHOP_REQ(461),
    EGS_BREAK_PERSONAL_SHOP_ACK(462),
    EGS_BREAK_PERSONAL_SHOP_NOT(463),

    EGS_JOIN_PERSONAL_SHOP_REQ(464),
    EGS_JOIN_PERSONAL_SHOP_ACK(465),

    EGS_LEAVE_PERSONAL_SHOP_REQ(466),
    EGS_LEAVE_PERSONAL_SHOP_ACK(467),

    EGS_UPDATE_SQUARE_PERSONAL_SHOP_INFO_NOT(468),
    //Personal Shop packet
    //////////////////////////////////////////////////////////////////////////

    EGS_ADMIN_CHANGE_UNIT_CLASS_REQ(469),
    EGS_ADMIN_CHANGE_UNIT_CLASS_ACK(470),

    EGS_CHANGE_TRADE_NOT(471),

    EGS_RESOLVE_ITEM_REQ(472),
    EGS_RESOLVE_ITEM_ACK(473),
    EGS_ENCHANT_ITEM_REQ(474),
    EGS_ENCHANT_ITEM_ACK(475),
    EGS_SOCKET_ITEM_REQ(476),
    EGS_SOCKET_ITEM_ACK(477),

    EGS_ITEM_EXPIRATION_NOT(478),

    // 추천인
    EGS_RECOMMEND_USER_REQ(479),
    EGS_RECOMMEND_USER_ACK(480),
    EGS_RECOMMEND_USER_RESULT_NOT(481),
    EGS_REWARD_TO_RECOMMEND_USER_NOT(482),
    EGS_REWARD_TO_TUTORIAL_USER_NOT(483),

    // 우체국 信箱
    EGS_GET_POST_LETTER_LIST_REQ(484),
    EGS_GET_POST_LETTER_LIST_ACK(485),
    EGS_NEW_POST_LETTER_INFO_NOT(486),
    EGS_SEND_LETTER_REQ(487),
    EGS_SEND_LETTER_ACK(488),
    EGS_RECEIVE_LETTER_NOT(489),
    EGS_READ_LETTER_REQ(490),
    EGS_READ_LETTER_ACK(491),
    EGS_GET_ITEM_FROM_LETTER_REQ(),
    EGS_GET_ITEM_FROM_LETTER_ACK(),
    EGS_DELETE_LETTER_REQ(),
    EGS_DELETE_LETTER_ACK(),
    EGS_RENEWAL_LETTER_REQ(496),
    EGS_RENEWAL_LETTER_ACK(497),

    // 근성도 회복 아이템 疲勞
    EGS_RESTORE_SPIRIT_NOT(498),

    EGS_CASH_PRODUCT_INFO_REQ(499),
    EGS_CASH_PRODUCT_INFO_ACK(500),

    EGS_BUY_CASH_ITEM_REQ(501),
    EGS_BUY_CASH_ITEM_ACK(502),

    EGS_PRESENT_CASH_ITEM_REQ(503),
    EGS_PRESENT_CASH_ITEM_ACK(504),

    //{{ 2009. 10. 6  최육사	자동결재
    EGS_BUY_CASH_ITEM_AUTOMATIC_PAYMENT_REQ(505),
    EGS_BUY_CASH_ITEM_AUTOMATIC_PAYMENT_ACK(506),
    EGS_AUTO_PAYMENT_RESURRECTION_STONE_NOT(507),
    //}}

    EGS_DEL_TUTORIAL_REQ(508),
    EGS_DEL_TUTORIAL_ACK(509),
    EGS_DEL_TUTORIAL_NOT(510),	//유저에게 사제관계가 끈어졌다는걸 알려주는 패킷.
    EGS_TUTORIAL_UPDATE_UNIT_INFO_NOT(511),

    EGS_REQUEST_TUTORIAL_REQ(512),	//사제관계 요청패킷
    EGS_REQUEST_TUTORIAL_ACK(513),	//확인패킷
    EGS_REQUEST_TUTORIAL_NOT(514),	//요청을 받는 당사장에게 보내지는 패킷
    EGS_REQUEST_TUTORIAL_REPLY_NOT(515),	//요청한 사람에게 최후에 알려지는 패킷

    EGS_TUTORIAL_STUDENT_LIST_REQ(516),
    EGS_TUTORIAL_STUDENT_LIST_ACK(517),

    EGS_CASH_PRODUCT_INFO_CHANGED_NOT(518),

    EGS_CURRENT_TIME_REQ(493),
    EGS_CURRENT_TIME_ACK(494),

    // 장바구니
    EGS_GET_WISH_LIST_REQ(521),
    EGS_GET_WISH_LIST_ACK(522),
    EGS_MODIFY_WISH_LIST_REQ(523),
    EGS_MODIFY_WISH_LIST_ACK(524),

    //{{ 2008. 5. 21  최육사  체험ID 제한
    EGS_GUEST_USER_LIMIT_LEVEL_NOT(525),
    //}}

    EGS_AGREE_HACK_USER_REQ(526),
    EGS_AGREE_HACK_USER_ACK(527),
    EGS_REPORT_HACK_USER_NOT(528),

    //{{ 2008. 6. 16  최육사  넥슨빌링 패키지 픽업
    EGS_GET_PURCHASED_PACKAGE_CASH_ITEM_REQ(529),
    EGS_GET_PURCHASED_PACKAGE_CASH_ITEM_ACK(530),
    //}}

    //{{ 2008. 6. 16  최육사  던전 컨티뉴 시간 멈추기
    EGS_STOP_DUNGEON_CONTINUE_TIME_REQ(531),
    EGS_STOP_DUNGEON_CONTINUE_TIME_ACK(532),
    //}}

    //{{ 2008. 6. 20  최육사  캐쉬 인벤 선물 확인
    EGS_NEW_PRESENT_CASH_INVENTORY_NOT(533),
    EGS_CHECK_PRESENT_CASH_INVENTORY_NOT(534),
    EGS_PRESENT_MESSAGE_TO_RECEIVER_NOT(535),
    //}}

    //{{ 2008. 6. 24  최육사  nProtect 해킹
    EGS_NPROTECT_HACKING_USER_NOT(536),
    //}}

    //{{ 2009. 7. 6  최육사		랭킹 개편
    EGS_NEW_RECORD_RANKING_SUCCESS_NOT(537),
    EGS_GET_RANKING_INFO_REQ(538),
    EGS_GET_RANKING_INFO_ACK(539),
    //}}

    //{{ 2008. 9. 3  최육사		속성강화
    EGS_ATTRIB_ENCHANT_ITEM_REQ(540),
    EGS_ATTRIB_ENCHANT_ITEM_ACK(541),
    EGS_IDENTIFY_ITEM_REQ(542),
    EGS_IDENTIFY_ITEM_ACK(543),
    //}}

    //////////////////////////////////////////////////////////////////////////
    // dummy packet enum
    EGS_GOOD_JOB_21_REQ(544),
    EGS_GOOD_JOB_22_REQ(545),
    EGS_GOOD_JOB_23_REQ(546),
    EGS_GOOD_JOB_24_REQ(547),
    EGS_GOOD_JOB_25_REQ(548),
    //////////////////////////////////////////////////////////////////////////

    //{{ 2008. 9. 26  최육사	우체국 블랙리스트 信箱
    EGS_GET_POST_BLACK_LIST_REQ(549),
    EGS_GET_POST_BLACK_LIST_ACK(550),
    EGS_NEW_POST_BLACK_LIST_REQ(551),
    EGS_NEW_POST_BLACK_LIST_ACK(552),
    EGS_DEL_POST_BLACK_LIST_REQ(553),
    EGS_DEL_POST_BLACK_LIST_ACK(554),
    //}}

    //{{ 2008. 10. 6  최육사	타이틀
    EGS_EQUIP_TITLE_REQ(555),
    EGS_EQUIP_TITLE_ACK(556),
    EGS_TITLE_EXPIRATION_NOT(557),
    EGS_NEW_MISSION_NOT(558),
    EGS_UPDATE_MISSION_NOT(559),
    EGS_REWARD_TITLE_NOT(560),
    //}}

    //{{ 2008. 10. 9  최육사	아이템사용
    EGS_USE_ITEM_IN_INVENTORY_REQ(561),
    EGS_USE_ITEM_IN_INVENTORY_ACK(562),
    //}}

    //{{ 2008. 10. 24  최육사	타이틀 치트
    EGS_ADMIN_GET_TITLE_CHEAT_REQ(563),
    EGS_ADMIN_GET_TITLE_CHEAT_ACK(564),
    //}}

    //{{ 2008. 10. 29  최육사	던전입장불가
    EGS_DUNGEON_REQUIRE_ITEM_MESSAGE_NOT(),
    //}}

    //{{ 2008. 12. 14  최육사	캐릭터 슬롯 확장
    EGS_EXPAND_CHAR_SLOT_NOT(566),
    //}}

    //{{ 2008. 12. 19  최육사	아이템 복구
    EGS_RESTORE_ITEM_REQ(567),
    EGS_RESTORE_ITEM_ACK(568),
    //}}

    //{{ 2008. 12. 25  최육사	부여
    EGS_ENCHANT_ATTACH_ITEM_REQ(569),
    EGS_ENCHANT_ATTACH_ITEM_ACK(570),
    //}}

    //{{ 2008. 11. 18  최육사	아이템 교환
    EGS_ITEM_EXCHANGE_REQ(571),
    EGS_ITEM_EXCHANGE_ACK(572),
    //}}

    //{{ 2008. 11. 4  최육사	광장 개편
    EGS_STATE_CHANGE_FIELD_REQ(573),
    EGS_STATE_CHANGE_FIELD_ACK(574),
    EGS_FIELD_LOADING_COMPLETE_REQ(575),
    EGS_FIELD_LOADING_COMPLETE_ACK(576),
    EGS_LEAVE_FIELD_NOT(577),

    EGS_CHANGE_USER_LIST_IN_SECTOR_NOT(578),
    EGS_FIELD_UNIT_SYNC_DATA_NOT(579),
    //}}

    ETR_REG_UID(580),	// TCP RELAY 접속후 UID 전송.
    ETR_UNIT_DISCONNECT(581),
    EGS_FIELD_UNIT_SYNC_DATA_BROAD_NOT(582),

    //{{ 2009. 1. 13  최육사	커뮤니티 유저 리스트
    EGS_COMMUNITY_USER_LIST_REQ(583),
    EGS_COMMUNITY_USER_LIST_ACK(584),
    //}}

    //{{ 2008. 12. 9  최육사	친구 리스트
    EGS_OPTION_UPDATE_REQ(585),
    EGS_OPTION_UPDATE_ACK(586),
    //}}

    //{{ 2009. 2. 13  최육사	채널 이동
    EGS_DISCONNECT_FOR_SERVER_SELECT_REQ(587),
    EGS_DISCONNECT_FOR_SERVER_SELECT_ACK(588),
    EGS_DISCONNECT_FOR_CHANNEL_CHANGE_REQ(589),
    EGS_DISCONNECT_FOR_CHANNEL_CHANGE_ACK(590),
    ECH_DISCONNECT_REQ(591),
    ECH_DISCONNECT_ACK(592),
    //}}

    //{{ 2009. 4. 7  최육사		친구정보
    EGS_UPDATE_FRIEND_INFO_REQ(593),
    EGS_UPDATE_FRIEND_INFO_ACK(594),
    //}}

    //{{ 2009. 4. 8  최육사		닉네임 변경
    EGS_DELETE_NICK_NAME_SUCCESS_NOT(595),
    //}}

    //{{ 2009.05.06.hoons.캐릭터 메신져 아이디 요청.
    EGS_GET_MY_MESSENGER_SN_REQ(596),
    EGS_GET_MY_MESSENGER_SN_ACK(597),
    //}} hoons

    //{{ 2009. 5. 8  최육사		실시간 레벨업
    EGS_CHAR_LEVEL_UP_NOT(598),
    //}}

    //{{ 2009. 5. 14  최육사	내구도 소모 개편
    EGS_DECREASE_ENDURANCE_NOT(599),
    EGS_ZERO_ENDURANCE_ITEM_IN_ROOM_NOT(600),
    EGS_DECREASE_SPIRIT_NOT(601),
    //}}

    //{{ 2009. 6. 3  최육사		확성기
    EGS_USE_MEGAPHONE_REQ(602),
    EGS_USE_MEGAPHONE_ACK(603),
    EGS_MEGAPHONE_MESSAGE_NOT(604),
    //}}

    //{{ 2009. 7. 10  최육사	사기 시스템
    EGS_PARTY_FEVER_POINT_NOT(605),
    EGS_CHANGE_PARTY_FEVER_STATE_NOT(606),
    EGS_ADMIN_INCREASE_PARTY_FEVER_POINT_NOT(607),
    //}}

    // -----------------------------------------------------------------------------------------------------------------------
    // 여기 아래에 선언하시오
    // -----------------------------------------------------------------------------------------------------------------------

    EGS_REQUEST_FRIEND_REQ(609),
    EGS_REQUEST_FRIEND_ACK(610),
    EGS_REQUEST_FRIEND_NOT(611),

    EGS_ACCEPT_FRIEND_REQ(612),
    EGS_ACCEPT_FRIEND_ACK(613),
    EGS_ACCEPT_FRIEND_NOT(614),

    EGS_DENY_FRIEND_REQ(615),
    EGS_DENY_FRIEND_ACK(616),
    EGS_DENY_FRIEND_NOT(617),

    EGS_BLOCK_FRIEND_REQ(618),
    EGS_BLOCK_FRIEND_ACK(619),
    EGS_BLOCK_FRIEND_NOT(620),

    EGS_UNBLOCK_FRIEND_REQ(621),
    EGS_UNBLOCK_FRIEND_ACK(622),
    EGS_UNBLOCK_FRIEND_NOT(623),

    EGS_DELETE_FRIEND_REQ(624),
    EGS_DELETE_FRIEND_ACK(625),
    EGS_DELETE_FRIEND_NOT(),

    EGS_MOVE_FRIEND_REQ(),
    EGS_MOVE_FRIEND_ACK(628),

    EGS_MAKE_FRIEND_GROUP_REQ(629),
    EGS_MAKE_FRIEND_GROUP_ACK(630),

    EGS_RENAME_FRIEND_GROUP_REQ(631),
    EGS_RENAME_FRIEND_GROUP_ACK(632),

    EGS_DELETE_FRIEND_GROUP_REQ(633),
    EGS_DELETE_FRIEND_GROUP_ACK(634),

    EGS_FRIEND_POSITION_UPDATE_NOT(635),

    //{{ dmlee 2009/07/17 헤니르 시공 비밀스테이지 관련

    EGS_DUNGEON_SECRET_STAGE_ENTER_CHECK_REQ(636),	// 비밀 스테이지로 입장가능한지 서버에 물어보는 패킷), 방장 -> 서버
    EGS_DUNGEON_SECRET_STAGE_ENTER_CHECK_ACK(637),	// 서버 -> 방장
    EGS_DUNGEON_SECRET_STAGE_ENTER_CHECK_NOT(638),	// 비밀 스테이지로 입장가능한 경우에 서버 -> 모든 유저

    EGS_DUNGEON_SECRET_STAGE_ENTER_SELECT_NOT(639),	// 모든 유저가 각각 비밀 스테이지로 입장 할지 말지 선택을 서버로 알리는 패킷

    EGS_DUNGEON_SECRET_STAGE_ENTER_RESULT_NOT(640),	// 서버가 실제로 비밀 스테이지로 진행하라는 것을 모든 유저에게 알리는 패킷 (단(), 방장만 이 패킷을 받아서 처리한다)

    //}} dmlee 2009/07/17 헤니르 시공 비밀스테이지 관련

    //{{ 2009. 7. 29  최육사	item set cheat
    EGS_ADMIN_GET_ITEM_SET_NOT(641),
    //}}
    //{{ 2009. 8. 5  최육사		체험ID치트
    EGS_ADMIN_GUEST_USER_MODE_NOT(642),
    //}}

    //{{ 2009. 8. 7  최육사		은행
    EGS_GET_MY_BANK_INFO_REQ(643),
    EGS_GET_MY_BANK_INFO_ACK(644),
    EGS_EXPAND_BANK_SLOT_NOT(645),
    //}}

    //{{ 2009. 8. 18  최육사	HackShield
    EGS_HACKSHIELD_CHECK_REQ(646),
    EGS_HACKSHIELD_CHECK_ACK(647),
    //}}

    //{{ 2009. 8. 27  최육사	밀봉
    EGS_SEAL_ITEM_REQ(648),
    EGS_SEAL_ITEM_ACK(649),
    EGS_UNSEAL_ITEM_REQ(650),
    EGS_UNSEAL_ITEM_ACK(651),
    //}}

    ECH_VERIFY_ACCOUNT_REQ(626), // 如果帳密有除了英文數字以外的字 包頭會用659
    ECH_VERIFY_ACCOUNT_ACK(627),
    //
    ECH_ENTER_CASH_SHOP_ACK(655),
    ECH_CASH_SHOP_INFO_REQ(656),
    ECH_CASH_SHOP_INFO_ACK(657),
    ECH_CASH_SHOP_INFO_NOT(658),
    ECH_VERIFY_ACCOUNT_REQ_(659),
    //////////////////////////////////////////////////////////////////////////
    //{{ 2009. 9. 17  최육사	길드
    EGS_CREATE_GUILD_REQ(660),

    EGS_CREATE_GUILD_ACK(661),
    EGS_GUILD_INFO_NOT(662),
    EGS_GET_GUILD_USER_LIST_REQ(663),

    EGS_GET_GUILD_USER_LIST_ACK(664),
    EGS_GUILD_MEMBER_INFO_NOT(665),

    EGS_GUILD_MESSAGE_NOT(666),
    EGS_INVITE_GUILD_REQ(667),

    ECH_ENTER_CASH_SHOP_REQ(654),
    EGS_INVITE_GUILD_ACK(668),
    EGS_INVITE_GUILD_NOT(669),

    EGS_INVITE_GUILD_REPLY_REQ(670),
    EGS_INVITE_GUILD_REPLY_ACK(671),
    EGS_INVITE_GUILD_REPLY_DENY_NOT(672),
    EGS_JOIN_GUILD_SUCCESS_NOT(673),

    EGS_CHANGE_GUILD_MEMBER_GRADE_REQ(674),
    EGS_CHANGE_GUILD_MEMBER_GRADE_ACK(675),

    EGS_CHANGE_GUILD_MESSAGE_REQ(676),
    EGS_CHANGE_GUILD_MESSAGE_ACK(677),

    EGS_KICK_GUILD_MEMBER_REQ(678),
    EGS_KICK_GUILD_MEMBER_ACK(679),

    EGS_CHANGE_GUILD_MEMBER_MESSAGE_REQ(680),
    EGS_CHANGE_GUILD_MEMBER_MESSAGE_ACK(681),

    EGS_DISBAND_GUILD_REQ(682),
    EGS_DISBAND_GUILD_ACK(683),

    //{{ 2012. 02. 22	박세훈	길드 이름 변경권
//#ifdef SERV_GUILD_CHANGE_NAME
    EGS_CHANGE_GUILD_NAME_CHECK_REQ(684),
    EGS_CHANGE_GUILD_NAME_CHECK_ACK(685),

    EGS_CHANGE_GUILD_NAME_REQ(686),
    EGS_CHANGE_GUILD_NAME_ACK(687),
//#endif SERV_GUILD_CHANGE_NAME
    //}}

    //////////////////////////////////////////////////////////////////////////
    // dummy packet enum
    EGS_GOOD_JOB_26_REQ(688),
    EGS_GOOD_JOB_27_REQ(689),
    EGS_GOOD_JOB_28_REQ(690),
    EGS_GOOD_JOB_29_REQ(691),
    EGS_GOOD_JOB_30_REQ(692),
    //////////////////////////////////////////////////////////////////////////

    //}}
    //////////////////////////////////////////////////////////////////////////

    // 693 內容只有一個boolean

    //{{ 2009. 9. 22  최육사	전직캐쉬
    EGS_CHANGE_JOB_CASH_ITEM_NOT(694),
    EGS_CHANGE_USER_INFO_NOT(695),
    //}}

    // 696

    //{{ 2009. 10. 26  최육사	트래픽공격
    EGS_TRAFFIC_ATTACKER_NOT(697),
    //}}

    //////////////////////////////////////////////////////////////////////////
    //{{ 2009. 11. 23  최육사	길드스킬

    EGS_GET_GUILD_SKILL_REQ(698),
    EGS_GET_GUILD_SKILL_ACK(699),
    EGS_GET_GUILD_SKILL_NOT(700),

    EGS_RESET_GUILD_SKILL_REQ(701),
    EGS_RESET_GUILD_SKILL_ACK(702),
    EGS_RESET_GUILD_SKILL_NOT(703),

    EGS_INIT_GUILD_SKILL_REQ(704),
    EGS_INIT_GUILD_SKILL_ACK(705),
    EGS_INIT_GUILD_SKILL_NOT(706),

    EGS_EXPIRE_GUILD_CASH_SKILL_POINT_NOT(707),

    EGS_CHANGE_SKILL_INFO_IN_ROOM_NOT(708),

    EGS_ADMIN_GET_GUILD_SKILL_POINT_REQ(709),
    EGS_ADMIN_GET_GUILD_SKILL_POINT_ACK(710),

    //}}
    //////////////////////////////////////////////////////////////////////////

    //{{ 2009. 12. 4  최육사	접속시간이벤트시스템개편
    EGS_TIME_EVENT_INFO_NOT(711),
    //}}

    //////////////////////////////////////////////////////////////////////////
    // 던전(),대전 아이템 기능.
    EGS_CREATE_PVP_ITEM_REQ(712),
    EGS_CREATE_PVP_ITEM_ACK(713),
    EGS_CREATE_PVP_ITEM_NOT(714),

    //EGS_GET_ITEM_REQ(), // -> 기존 던전용 패킷을 이용하자.
    //EGS_GET_ITEM_ACK(), // -> 기존 던전용 패킷을 이용하자.
    //EGS_GET_ITEM_NOT(), // -> 기존 던전용 패킷을 이용하자.

    EGS_CHANGE_PVP_ITEM_NOT(715),

    EGS_CHANGE_PVP_ITEMMODE_REQ(716),
    EGS_CHANGE_PVP_ITEMMODE_ACK(717),
    EGS_CHANGE_PVP_ITEMMODE_NOT(718),

    // 던전(),대전 아이템 기능.
    //////////////////////////////////////////////////////////////////////////

    //{{ 2009. 12. 8  최육사	크리스마스이벤트
    EGS_CHECK_TIME_EVENT_COMPLETE_REQ(719),
    EGS_CHECK_TIME_EVENT_COMPLETE_ACK(720),
    //}}

    //{{ 2009. 12. 14  최육사	헤니르임시인벤
    EGS_CLEAR_TEMP_INVENTORY_NOT(721),
    //}}

    //{{ dmlee 2009/12/15 PVP 게임 테스트
    EGS_CHANGE_PVP_GAME_OPTION_REQ(722),
    EGS_CHANGE_PVP_GAME_OPTION_ACK(723),
    EGS_CHANGE_PVP_GAME_OPTION_NOT(724),
    //}} dmlee 2009/12/15 PVP 게임 테스트

    //{{ 2009. 12. 29  최육사	NPCKILLALL해킹방지
    EGS_DUNGEON_KILLALLNPC_CHECK_REQ(725),
    EGS_DUNGEON_KILLALLNPC_CHECK_ACK(726),
    EGS_REQUEST_HACKSHIELD_CHECK_NOT(727),
    //}}

    //////////////////////////////////////////////////////////////////////////
    //{{ 2009. 12. 31  최육사	길드 광고
    EGS_GET_GUILD_AD_LIST_REQ(728),
    EGS_GET_GUILD_AD_LIST_ACK(729),

    EGS_GET_GUILD_SKILL_IN_BOARD_REQ(730),
    EGS_GET_GUILD_SKILL_IN_BOARD_ACK(731),

    EGS_REGISTRATION_GUILD_AD_REQ(732),
    EGS_REGISTRATION_GUILD_AD_ACK(733),

    EGS_MODIFY_REG_GUILD_AD_REQ(734),
    EGS_MODIFY_REG_GUILD_AD_ACK(735),

    EGS_APPLY_JOIN_GUILD_REQ(736),
    EGS_APPLY_JOIN_GUILD_ACK(737),

    EGS_GET_APPLY_JOIN_GUILD_LIST_REQ(738),
    EGS_GET_APPLY_JOIN_GUILD_LIST_ACK(739),

    EGS_ACCEPT_JOIN_GUILD_REQ(740),
    EGS_ACCEPT_JOIN_GUILD_ACK(741),

    EGS_DELETE_APPLY_JOIN_GUILD_REQ(742),
    EGS_DELETE_APPLY_JOIN_GUILD_ACK(743),
    //}}
    //////////////////////////////////////////////////////////////////////////

    //{{ 2010. 01. 07  최육사	추천인리스트
    EGS_GET_RECOMMEND_USER_LIST_REQ(744),
    EGS_GET_RECOMMEND_USER_LIST_ACK(745),

    EGS_RECOMMEND_USER_INFO_NOT(746),
    //}}

    //{{ 2010. 01. 29  최육사	PC방 상용화
    EGS_PC_BANG_AUTH_RESULT_NOT(747),
    //}}

    //{{ 2010. 02. 06  최육사	일일 이벤트 퀘스트
    EGS_EVENT_QUEST_INFO_NOT(748),
    //}}

    //{{ 2010. 02. 12  최육사	해킹툴 리스트
    EGS_HACKING_TOOL_LIST_NOT(749),
    //}}

    //{{ 2010. 02. 23  최육사	웹 포인트 이벤트
    EGS_ATTENDANCE_CHECK_REQ(750),
    EGS_ATTENDANCE_CHECK_ACK(751),

    EGS_GET_WEB_POINT_NOT(752),
    //}}

    EGS_SEARCH_TRADE_BOARD_REQ(753),
    EGS_SEARCH_TRADE_BOARD_ACK(754),

    // 755
    // 756

    //{{ 2010. 03. 22  최육사	기술의 노트
    EGS_EXPAND_SKILL_NOTE_PAGE_NUM_NOT(757),
    EGS_REG_SKILL_NOTE_MEMO_REQ(758),
    EGS_REG_SKILL_NOTE_MEMO_ACK(759),
    //}}

    //{{ 2010. 05. 06  최육사	비밀던전 헬모드
    EGS_DUNGEON_EFFECT_REMAINING_TIME_NOT(760),
    EGS_DUNGEON_EFFECT_TIME_OUT_NOT(761),
    //}}

    //{{ 2010. 05. 06  최육사	에러 팝업
    EGS_ERROR_POPUP_NOT(762),
    //}}

    //{{ 2010. 05. 20  최육사	스크립트 파싱
    EGS_GET_CLIENT_SCRIPT_REQ(763),
    EGS_GET_CLIENT_SCRIPT_ACK(764),
    //}}

    //{{ 2010. 06. 17  최육사	오토핵 방지
    EGS_SERVER_CHECK_HACK_USER_NOT(765),
    //}}

    //{{ 2010. 7. 21  최육사	펫 시스템
    EGS_CREATE_PET_REQ(766),
    EGS_CREATE_PET_ACK(767),

    EGS_GET_PET_LIST_REQ(768),
    EGS_GET_PET_LIST_ACK(769),

    EGS_SUMMON_PET_REQ(770),
    EGS_SUMMON_PET_ACK(771),
    EGS_SUMMON_PET_NOT(772),

    EGS_COMMANDS_FOR_PETS_REQ(773),
    EGS_COMMANDS_FOR_PETS_ACK(774),
    EGS_PET_ACTION_NOT(775),

    EGS_CHANGED_PET_SATIETY_NOT(776),
    EGS_CHANGED_PET_INTIMACY_NOT(777),
    EGS_CHANGED_PET_SATIETY_INTIMACY_NOT(778),

    EGS_FEED_PETS_REQ(779),
    EGS_FEED_PETS_ACK(780),
    EGS_FIRST_FEED_PETS_NOT(781),

    EGS_SET_AUTO_FEED_PETS_REQ(782),
    EGS_SET_AUTO_FEED_PETS_ACK(783),
    EGS_AUTO_FEED_NOT(784),

    EGS_PET_EVOLUTION_REQ(785),
    EGS_PET_EVOLUTION_ACK(786),
    EGS_PET_EVOLUTION_NOT(787),

    EGS_ADMIN_CHANGE_PET_INFO_NOT(788),

    //{{ 2012. 02. 22	박세훈	펫 이름 변경권
//#ifdef SERV_PET_CHANGE_NAME
    EGS_CHANGE_PET_NAME_REQ(789),
    EGS_CHANGE_PET_NAME_ACK(790),
//#endif SERV_PET_CHANGE_NAME
    //}}

    //}}

    //{{ 2010. 8. 16	최육사	기간 리셋 아이템 이벤트
    EGS_RESET_PERIOD_ITEM_NOT(791),
    //}}

    //{{ 2010. 9. 29	최육사	ED 모니터링 치트
    EGS_ADMIN_SHOW_ED_CHEAT_REQ(792),
    EGS_ADMIN_SHOW_ED_CHEAT_ACK(793),
    //}}

    //{{ 2010. 10. 13	최육사	DLL Manager
    EGS_MODULE_INFO_UPDATE_NOT(794),
    //}}

    //{{ 2010. 11. 17	최육사	넥슨 빌링 청약 철회
    EGS_CASH_ITEM_REFUND_REQ(795),
    EGS_CASH_ITEM_REFUND_ACK(796),
    //}}

    //{{ 2011. 01. 04  김민성	속성 부적
    EGS_ATTRIB_ATTACH_ITEM_REQ(797),
    EGS_ATTRIB_ATTACH_ITEM_ACK(798),
    //}}

    //{{ 2011. 01. 06  김민성  스킬슬롯체인지 체크(인벤토리-기간제) 기능 구현
    EGS_SKILL_SLOT_CHANGE_ITEM_NOT(799),
    //}}

    //{{ 2011. 01. 25  김민성  월드 트리거 전달(던전만 적용중 - 이후 PVP 확장)
    EGS_WORLD_TRIGGER_RELOCATION_REQ(800),
    EGS_WORLD_TRIGGER_RELOCATION_ACK(801),
    EGS_WORLD_TRIGGER_RELOCATION_NOT(802),
    //}}

    //{{ 2011. 03. 26  김민성	청 1차 추가 스킬 추가 - 버프 스킬 정보 전달
    EGS_BUFF_SKILL_INFO_CONVEY_REQ(803),
    EGS_BUFF_SKILL_INFO_CONVEY_ACK(804),
    EGS_BUFF_SKILL_INFO_CONVEY_NOT(),
    //}}

    //{{ 2011. 04. 13  김민성  글로벌 서버 추가
//#ifdef SERV_INSERT_GLOBAL_SERVER
    EGS_WORLD_MISSION_UPDATE_NOT(806),
    EGS_UPDATE_WORLD_BUFF_NOT(807),
    EGS_CREATE_ATTRIB_NPC_NOT(808),
//#endif SERV_INSERT_GLOBAL_SERVER
    //}} 2011. 04. 13  김민성  글로벌 서버 추가

    //////////////////////////////////////////////////////////////////////////
    // dummy packet enum
    EGS_GOOD_JOB_31_REQ(809),
    EGS_GOOD_JOB_32_REQ(810),
    EGS_GOOD_JOB_33_REQ(811),
    EGS_GOOD_JOB_34_REQ(812),
    EGS_GOOD_JOB_35_REQ(813),

    // +5

    //////////////////////////////////////////////////////////////////////////

    //{{ 2011. 04. 04	최육사	대리 상인
    EGS_CREATE_PSHOP_AGENCY_REQ(818),
    EGS_CREATE_PSHOP_AGENCY_ACK(819),

    EGS_CHANGE_PSHOP_AGENCY_EXPIRATION_NOT(820),

    EGS_REG_PSHOP_AGENCY_ITEM_REQ(821),
    EGS_REG_PSHOP_AGENCY_ITEM_ACK(822),

    EGS_JOIN_MY_PSHOP_AGENCY_REQ(823),
    EGS_JOIN_MY_PSHOP_AGENCY_ACK(824),

    EGS_LEAVE_PSHOP_AGENCY_REQ(825),
    EGS_LEAVE_PSHOP_AGENCY_ACK(826),

    EGS_PSHOP_AGENCY_MESSAGE_NOT(827),

    EGS_STOP_SALE_PSHOP_AGENCY_REQ(828),
    EGS_STOP_SALE_PSHOP_AGENCY_ACK(829),

    EGS_PICK_UP_FROM_PSHOP_AGENCY_REQ(830),
    EGS_PICK_UP_FROM_PSHOP_AGENCY_ACK(831),

    EGS_ADMIN_PSHOP_AGENCY_CHEAT_REQ(832),
    //}}

    //{{ 2011. 05. 02  김민성	2차 보안 시스템
//#ifdef SERV_SECOND_SECURITY
    EGS_SECOND_SECURITY_INFO_NOT(833),

    EGS_AUTH_SECOND_SECURITY_REQ(834),	// 2차 보안 비밀번호 입력
    EGS_AUTH_SECOND_SECURITY_ACK(835),

    EGS_CREATE_SECOND_SECURITY_REQ(836),	// 2차 보안 설정
    EGS_CREATE_SECOND_SECURITY_ACK(837),

    EGS_DELETE_SECOND_SECURITY_REQ(838), // 2차 보안 해지
    EGS_DELETE_SECOND_SECURITY_ACK(839),

    EGS_DELETE_SECOND_SECURITY_VERIFY_REQ(840), // 2차 보안 해지 확인
    EGS_DELETE_SECOND_SECURITY_VERIFY_ACK(841),

    EGS_CHANGE_SECOND_SECURITY_PW_REQ(842),	// 2차 보안 비밀번호 변경
    EGS_CHANGE_SECOND_SECURITY_PW_ACK(843),

    EGS_COMPARE_SECOND_SECURITY_PW_REQ(844),	// 2차 보안 비밀번호 확인
    EGS_COMPARE_SECOND_SECURITY_PW_ACK(845),

    EGS_CHECK_SECOND_SECURITY_PW_CHRACTER_LIST_REQ(), // 2차 보안 비밀번호 확인(캐릭터 목록창)
    EGS_CHECK_SECOND_SECURITY_PW_CHRACTER_LIST_ACK(),
//#endif SERV_SECOND_SECURITY
    //}}

    //{{ 2011. 03. 21  김민성	던전 난이도 보정
//#ifdef SERV_DUNGEON_DIFFICULTY_REVISION
    EGS_PARTY_CHANGE_CHECK_MIN_LEVEL_REQ(846),
    EGS_PARTY_CHANGE_CHECK_MIN_LEVEL_ACK(847),
    EGS_PARTY_CHANGE_CHECK_MIN_LEVEL_NOT(848),
//#endif SERV_DUNGEON_DIFFICULTY_REVISION
    //}}

    //{{ 2011. 05. 23  김민성	큐피엘 젤리 친밀도 증감
//#ifdef SERV_ADD_KEWPIEL_JELLY
    EGS_EAT_SPECIAL_FEED_NOT(849),
//#endif SERV_ADD_KEWPIEL_JELLY
    //}}

    //{{ 2011. 05. 27    김민성    휴면 복귀 유저 보상
//#ifdef SERV_COME_BACK_USER_REWARD
    EGS_COME_BACK_USER_NOT(850),
    EGS_COME_BACK_BUFF_NOT(851),
//#endif SERV_COME_BACK_USER_REWARD
    //}}

    //{{ 2011. 06. 14	최육사	대전 개편
//#ifdef SERV_PVP_NEW_SYSTEM
    EGS_CHANGE_PARTY_TYPE_REQ(852),
    EGS_CHANGE_PARTY_TYPE_ACK(853),
    EGS_CHANGE_PARTY_TYPE_NOT(854),

    EGS_PVP_PARTY_CHANGE_MATCH_INFO_REQ(855),
    EGS_PVP_PARTY_CHANGE_MATCH_INFO_ACK(856),
    EGS_PVP_PARTY_CHANGE_MATCH_INFO_NOT(857),

    EGS_REQUEST_MATCH_MAKING_REQ(858),
    EGS_REQUEST_MATCH_MAKING_ACK(859),
    EGS_REG_MATCH_WAIT_LIST_SUCCESS_NOT(860),

    EGS_CANCEL_MATCH_MAKING_REQ(861),
    EGS_CANCEL_MATCH_MAKING_ACK(862),

    EGS_UNREG_MATCH_WAIT_LIST_NOT(863),
    EGS_MATCH_CLOSE_NOT(864),

    EGS_MATCH_MAKING_SUCCESS_NOT(865),
    EGS_MATCH_MAKING_SUCCESS_REPLY_NOT(866),

    EGS_GAME_START_PVP_MATCH_NOT(867),

    EGS_PVP_NPC_UNIT_RE_BIRTH_POS_REQ(868),
    EGS_PVP_NPC_UNIT_RE_BIRTH_POS_ACK(869),

    EGS_PVP_NPC_UNIT_INFO_TO_SERVER_REQ(870),
    EGS_PVP_NPC_UNIT_INFO_TO_SERVER_ACK(871),
//#endif SERV_PVP_NEW_SYSTEM
    //}}

    //{{ 2011. 06. 22    김민성    이탈 방지 모델 - NEXON 세션 시스템 수정
//#ifdef SERV_NEXON_SESSION_PROTOCOL
    EGS_OUT_USER_RETAINING_REQ(872),
    EGS_OUT_USER_RETAINING_ACK(873),
    EGS_RETAINING_SELECT_REWARD_REQ(874),
    EGS_RETAINING_SELECT_REWARD_ACK(875),
//#endif SERV_NEXON_SESSION_PROTOCOL
    //}}

    //{{ 2011.10.13 박진웅 : GM계정용 엘리트 소환기능
    //#ifdef SERV_CREATE_ELITE_FOR_ADMIN
    EGS_ADMIN_NPC_UNIT_CREATE_REQ(876),
    EGS_ADMIN_NPC_UNIT_CREATE_ACK(877),
    EGS_ADMIN_NPC_UNIT_CREATE_NOT(878),
    //#endif SERV_CREATE_ELITE_FOR_ADMIN
    //}}


    //{{ 2011. 08. 08	최육사	머신ID 블럭기능
//#ifdef SERV_MACHINE_ID_BLOCK
    EGS_CHECK_MACHINE_ID_REQ(879),
    EGS_CHECK_MACHINE_ID_ACK(880),
//#endif SERV_MACHINE_ID_BLOCK
    //}}

    //{{ 2011. 08. 10    김민성    채널링 SOAP
//#ifdef SERV_CHANNELING_SOAP
    EGS_TOONILAND_USER_ID_NOT(881),
//#endif SERV_CHANNELING_SOAP
    //}}
    //{{ 2011. 08. 11	최육사	투니 랜드 채널링
//#ifdef SERV_TOONILAND_CHANNELING // SERV_JAPAN_CHANNELING
    EGS_ADMIN_CHANNELING_CODE_CHEAT_NOT(882),
//#endif SERV_TOONILAND_CHANNELING // SERV_JAPAN_CHANNELING
    //}}
    //{{ 2011. 08. 12   김민성      헤니르 개편
//#ifdef SERV_NEW_HENIR_TEST
    EGS_HENIR_REWARD_COUNT_NOT(883),
    EGS_ADMIN_HENIR_REWARD_CHEAT_NOT(884),
//#endif SERV_NEW_HENIR_TEST
    //}}

    //////////////////////////////////////////////////////////////////////////
    // dummy packet enum
    EGS_GOOD_JOB_36_REQ(885),
    EGS_GOOD_JOB_37_REQ(886),
    EGS_GOOD_JOB_38_REQ(887),
    EGS_GOOD_JOB_39_REQ(888),
    EGS_GOOD_JOB_40_REQ(889),
    //////////////////////////////////////////////////////////////////////////

    //{{ 2011. 08. 29	김민성       일일 랜덤 퀘스트
//#ifdef SERV_RANDOM_DAY_QUEST
    EGS_CHANGE_RANDOM_QUEST_NOT(890),
//#endif SERV_RANDOM_DAY_QUEST
    //}}

    //{{ 2011. 09. 14  김민성	해킹 프로세스 목록 전달 - 게임 로딩 이전 단계
//#ifdef SERV_DLL_LIST_CHECK_BEFOR_LOADING
    ECH_HACKING_TOOL_LIST_REQ(891),
    ECH_HACKING_TOOL_LIST_ACK(892),
//#endif SERV_DLL_LIST_CHECK_BEFOR_LOADING
    //}}

    //{{ 2011. 09. 20  김민성	게임내 ED 감시 모니터링
//#ifdef SERV_ED_MONITORING_IN_GAME
    EGS_ADMIN_ED_MONITORING_CHEAT_NOT(893),
    EGS_ED_MONITORING_BLOCK_REQ(894),
    EGS_ED_MONITORING_BLOCK_ACK(895),
    EGS_COMMUNITY_USER_LIST_MONITORING_MODE_REQ(896),
//#endif SERV_ED_MONITORING_IN_GAME
    //}}

    //{{ 2011. 10. 13	최육사	컨텐츠 관리자
//#ifdef SERV_CONTENT_MANAGER
    EGS_CASH_SHOP_OPEN_NOT(897),
//#endif SERV_CONTENT_MANAGER
    //}}

    //{{ 2011. 09. 29  김민성	셧다운제 도입
//#ifdef SERV_SHUTDOWN_SYSTEM
    EGS_SHUT_DOWN_MESSAGE_NOT(898),
//#endif SERV_SHUTDOWN_SYSTEM
    //}}

    //{{ 2011.11.02     김민성    서버에서 SN 발급 및 유효성 검사
//#ifdef SERV_SERIAL_NUMBER_AVAILABILITY_CHECK
    ECH_NEW_SERVER_SN_NOT(899),
//#endif SERV_SERIAL_NUMBER_AVAILABILITY_CHECK
    //}}

    //{{ 2011. 11. 21  김민성	전직 변경 아이템
//#ifdef SERV_UNIT_CLASS_CHANGE_ITEM
    EGS_BUY_UNIT_CLASS_CHANGE_NOT(900),
//#endif SERV_UNIT_CLASS_CHANGE_ITEM
    //}}

    //{{ 2012. 02. 14    김민성   PVP 대전 Item 생성 위치 변경
//#ifdef SERV_PVP_ITEM_CHANGE_POS
    EGS_CHANGE_PVP_ITEM_POS_REQ(901),
    EGS_CHANGE_PVP_ITEM_POS_ACK(902),
    EGS_CHANGE_PVP_ITEM_POS_NOT(903),
//#endif SERV_PVP_ITEM_CHANGE_POS
    //}}

    //{{ 2012. 02. 21	김민성	인벤토리 정렬
//#ifdef SERV_SORT_CATEGORY_ITEM
    EGS_SORT_CATEGORY_ITEM_REQ(999),
    EGS_SORT_CATEGORY_ITEM_ACK(999),
//#endif SERV_SORT_CATEGORY_ITEM
    //}}

    //{{ 2011. 10. 27	최육사	배틀필드 시스템
//#ifdef SERV_BATTLE_FIELD_SYSTEM
    EGS_JOIN_BATTLE_FIELD_REQ(881),
    EGS_JOIN_BATTLE_FIELD_ACK(882),
    EGS_JOIN_BATTLE_FIELD_NOT(883),

    EGS_LEAVE_BATTLE_FIELD_NOT(884),

    EGS_BATTLE_FIELD_JOIN_USER_LOAD_COMPLETE_NOT(885),

    EGS_BATTLE_FIELD_NPC_LOAD_NOT(886),

    EGS_BATTLE_FIELD_NPC_LOAD_COMPLETE_REQ(887),
    EGS_BATTLE_FIELD_NPC_LOAD_COMPLETE_ACK(888),

    EGS_BATTLE_FIELD_NPC_P2P_SYNC_NOT(889),
//#ifndef  SERV_OPTIMIZE_ROBUST_USER_NPC_PACKET_SEND
    //EGS_BATTLE_FIELD_NPC_P2P_SYNC_COMPLETE_NOT(),
//#endif  SERV_OPTIMIZE_ROBUST_USER_NPC_PACKET_SEND

    EGS_BATTLE_FIELD_EVENT_MESSAGE_NOT(890),

    EGS_UPDATE_BATTLE_FIELD_USER_POS_NOT(891),

    EGS_QUICK_START_DUNGEON_GAME_REQ(892),				// 구성된 파티로 또는 혼자서 던전 게임 바로 시작!
    EGS_QUICK_START_DUNGEON_GAME_ACK(893),

    EGS_UPDATE_MOVE_TO_PARTY_MEMBER_INFO_NOT(894),		// 파티원에게 이동하는 버튼 활성화 여부

    // 자동 파티
    EGS_AUTO_PARTY_DUNGEON_GAME_REQ(895),				// 구성된 파티로 또는 혼자서 자동 파티 신청!
    EGS_AUTO_PARTY_DUNGEON_GAME_ACK(896),
    EGS_REG_AUTO_PARTY_WAIT_LIST_SUCCESS_NOT(897),		// 자동 파티 신청 성공!! 파티UI가 자동 파티UI로 변경된다.

    EGS_CANCEL_AUTO_PARTY_MAKING_REQ(898),				// 자동 파티 등록 해제 요청
    EGS_CANCEL_AUTO_PARTY_MAKING_ACK(899),

    EGS_UNREG_AUTO_PARTY_WAIT_LIST_NOT(900),				// 자동 파티 등록 해제!! 파티UI가 원래 파티UI로 변경된다.

    EGS_AUTO_PARTY_MAKING_SUCCESS_NOT(901),				// 자동 파티 매칭 성공! 던전 게임을 시작할지 말지를 물어보는 팝업이 뜬다!
    EGS_AUTO_PARTY_MAKING_SUCCESS_REPLY_NOT(902),		// 팝업의 수락&거절에 대한 응답을 담아 서버로 보내는 패킷

    EGS_AUTO_PARTY_CLOSE_NOT(903),						// 자동 파티 매칭이 닫히는 경우 오는 패킷(), 떠있는 팝업을 지우고 왜 매칭이 실패했는지 에러 팝업을 띄운다.

    EGS_REGROUP_PARTY_NOT(904),							// 새로 맺어지는 파티 정보

    EGS_REQUEST_GET_AUTO_PARTY_BONUS_INFO_NOT(905),		// 자동 파티 보너스 정보 요청
    EGS_UPDATE_AUTO_PARTY_BONUS_INFO_NOT(906),			// 자동 파티 보너스 정보

    // 플레이 정보
    EGS_UPDATE_PLAY_STATUS_NOT(907),						// 게임 플레이 상태
    EGS_UPDATE_PARTY_MEMBER_STATUS_NOT(908),				// 파티원들의 상태 정보

    EGS_GAME_START_TIME_COUNT_NOT(909),					// 게임 시작 카운트

    EGS_USE_SKILL_BUFF_IN_PLAY_NOT(910),					// 게임중에 사용되는 스킬에 대한 정보
    EGS_USE_SKILL_BUFF_IN_PLAY_BROAD_NOT(911),			// 게임중에 사용되는 스킬에 대한 정보 브로드 캐스팅
//#endif SERV_BATTLE_FIELD_SYSTEM
    //}}

    //{{ 2012. 04. 11	박세훈	( 복귀 유저 표시(),
//#ifdef SERV_EVENT_RETURN_USER_MARK_SCRIPT
    EGS_CRITERION_EVENT_NOT(912),
//#endif SERV_EVENT_RETURN_USER_MARK_SCRIPT
    //}}

    //{{ 2012. 06. 04	김민성       서버 해킹 유저 체크 요청 응답으로 변경
//#ifdef SERV_SERVER_CHECK_HACK_USER_REQ_ACK
    EGS_SERVER_CHECK_HACK_USER_REQ(),
    EGS_SERVER_CHECK_HACK_USER_ACK(),
    EGS_CHECK_HACK_USER_PACKET_REQUEST_NOT(),
//#endif SERV_SERVER_CHECK_HACK_USER_REQ_ACK
    //}}

    //{{ 2012. 05. 17	박세훈	키보드 맵핑 정보를 DB에서 읽고 쓰기
//#ifdef SERV_KEYBOARD_MAPPING_INFO_RW
    EGS_KEYBOARD_MAPPING_INFO_WRITE_REQ(916),
    EGS_KEYBOARD_MAPPING_INFO_WRITE_ACK(917),
    EGS_KEYBOARD_MAPPING_INFO_NOT(918),
//#endif SERV_KEYBOARD_MAPPING_INFO_RW
    //}}

    //{{ 2012. 05. 25	박세훈	채팅 옵션 정보를 DB에서 읽고 쓰기
//#ifdef SERV_CHAT_OPTION_INFO_RW
    EGS_CHAT_OPTION_INFO_WRITE_REQ(919),
    EGS_CHAT_OPTION_INFO_WRITE_ACK(920),
    EGS_CHAT_OPTION_INFO_NOT(921),
//#endif SERV_CHAT_OPTION_INFO_RW
    //}}
    //{{ 2012. 05. 30	최육사	그노시스 기간 치트
//#ifdef SERV_CASH_SKILL_POINT_DATE_CHANGE
    EGS_ADMIN_CASH_SKILL_POINT_DATE_CHANGE_REQ(922),
    EGS_ADMIN_CASH_SKILL_POINT_DATE_CHANGE_ACK(923),
//#endif SERV_CASH_SKILL_POINT_DATE_CHANGE
    //}}
    //{{ 2012. 06. 13	김민성       선택적 셧다운제
//#ifdef SERV_SELECTIVE_SHUTDOWN_SYSTEM
    EGS_BEFORE_SHUT_DOWN_MESSAGE_NOT(),
//#endif SERV_SELECTIVE_SHUTDOWN_SYSTEM
    //}}

    //{{ 2012. 07. 02	최육사		대기열 시스템
//#ifdef SERV_WAIT_QUEUE_SYSTEM
    ECH_WAIT_QUEUE_MESSAGE_NOT(),
//#endif SERV_WAIT_QUEUE_SYSTEM
    //}}

    //{{ 버프 관리 시스템 - 김민성
//#ifdef SERV_SERVER_BUFF_SYSTEM
    EGS_UPDATE_BUFF_INFO_NOT(935),						// 버프 정보 갱신 s -> c
    EGS_UPDATE_BUFF_INFO_IN_ROOM_NOT(936),				// 방 안에서의 버프 정보

    EGS_UPDATE_USER_UNIT_BUFF_INFO_NOT(929),
    EGS_UPDATE_USER_UNIT_BUFF_INFO_BROAD_NOT(930),

    EGS_UPDATE_NPC_UNIT_BUFF_INFO_NOT(931),
    EGS_UPDATE_NPC_UNIT_BUFF_INFO_BROAD_NOT(932),
//#endif SERV_SERVER_BUFF_SYSTEM
    //}}
    //{{ 2012. 07. 24	박세훈	해당 캐릭터의 모든 스킬을 다 찍는 치트
//#ifdef SERV_ADMIN_CHEAT_GET_ALL_SKILL
    EGS_ADMIN_CHEAT_GET_ALL_SKILL_REQ(),
    EGS_ADMIN_CHEAT_GET_ALL_SKILL_ACK(),
//#endif SERV_ADMIN_CHEAT_GET_ALL_SKILL
    //}}

    //{{ 2012. 08. 14	박세훈	대천사의 주화 이벤트 가이드 문구 출력
//#ifdef SERV_ARCHUANGEL_S_COIN_EVENT_GUIDE
    EGS_CHECK_THE_ARCHUANGEL_S_COIN_EVENT_LETTER_REQ(),
    EGS_CHECK_THE_ARCHUANGEL_S_COIN_EVENT_LETTER_ACK(),
//#endif SERV_ARCHUANGEL_S_COIN_EVENT_GUIDE
    //}}

    //{{ 2012. 09. 02	박세훈	Merge ( 대전에서 클라이언트 조작등으로 UDP 패킷이 날아오지 않는 유저가 발견되면 서버에서 킥한다. // 2012.06.11 lygan_조성욱(),
//#ifdef UDP_CAN_NOT_SEND_USER_KICK
    EGS_UDP_CHECK_KICK_USER_NOT(),
    EGS_UDP_KICK_GAMEEDIT_NOT(),
//#endif UDP_CAN_NOT_SEND_USER_KICK
    //}}

    //{{ 2012 대전 시즌2 전야 런칭 이벤트	- 김민성
//#ifdef SERV_2012_PVP_SEASON2_EVENT
    EGS_PVP_EVENT_INFO_NOT(),
//#endif SERV_2012_PVP_SEASON2_EVENT
    //}}

    //{{ 2012. 09. 21	박세훈	빙고 이벤트
//#ifdef SERV_EVENT_BINGO
    EGS_BINGO_EVENT_INFO_REQ(),		// 빙고 관련 이벤트 정보
    EGS_BINGO_EVENT_INFO_ACK(),
    EGS_BINGO_EVENT_LOTTERY_REQ(),	// 숫자 뽑기
    EGS_BINGO_EVENT_LOTTERY_ACK(),
    EGS_BINGO_EVENT_MIX_REQ(),		// 숫자 뒤섞기
    EGS_BINGO_EVENT_MIX_ACK(),
    EGS_BINGO_EVENT_RESET_REQ(),		// 판 초기화
    EGS_BINGO_EVENT_RESET_ACK(),
    EGS_BINGO_EVENT_INIT_REQ(),		// 12줄 완성 후 초기화
    EGS_BINGO_EVENT_INIT_ACK(),
//#endif SERV_EVENT_BINGO
    //}}

    //{{ 공존의 축제 - 지진 효과 - 김민성
//#ifdef SERV_EARTH_QUAKE_EFFECT
    EGS_EARTH_QUAKE_NOT(950),
//#endif SERV_EARTH_QUAKE_EFFECT
    //}}

    //{{ 2012. 09. 19   김민성   캐시샵 방문 상태
//#ifdef SERV_VISIT_CASH_SHOP
    EGS_VISIT_CASH_SHOP_NOT(),
//#endif SERV_VISIT_CASH_SHOP
    //}}

    //{{ 배틀필드 위험도 확인 치트 - 김민성
//#ifdef SERV_BATTLE_FIELD_DANGEROUS_CHEAT
    EGS_BATTLE_FIELD_DANGEROUS_VALUE_NOT(952),
//#endif SERV_BATTLE_FIELD_DANGEROUS_CHEAT
    //}}

    //{{ 2012. 10. 10	박세훈	튕긴 유저 마을로 보내기
//#ifdef UDP_CAN_NOT_SEND_USER_KICK
    EGS_UDP_KICK_STATE_CHANGE_FIELD_NOT(),
//#endif UDP_CAN_NOT_SEND_USER_KICK
    //}}

    //{{ 핑 상태체크 호스트 변경 - 김민성
//#ifdef SERV_CHOOSE_FASTEST_HOST
    EGS_UDP_PING_SCORE_NOT(954),
    EGS_CHECK_PING_SCORE_CHANGE_HOST_NOT(955),
//#endif SERV_CHOOSE_FASTEST_HOST
    //}
    //{{ 2012. 10. 30	박세훈	Merge 랜선랙 방지 작업-릴레이를 기본적으로 사용한다.
//#ifdef SERV_FIX_SYNC_PACKET_USING_RELAY
    EGS_FORCE_RELAY_REQ(),
    EGS_FORCE_RELAY_NOT(),
//#endif SERV_FIX_SYNC_PACKET_USING_RELAY
    //}}
    //{{ 2012. 11. 13	최육사		자동파티 대기열 카운트 표시
//#ifdef SERV_AUTO_PARTY_WAIT_USER_COUNT_VIEW
    EGS_AUTO_PARTY_WAIT_USER_COUNT_NOT(),
//#endif SERV_AUTO_PARTY_WAIT_USER_COUNT_VIEW
    //}}
    //{{ 2012. 12. 5	최육사		옵저버 대전 난입 모드
//#ifdef SERV_OBSERVER_PVP_INTRUDE_MODE
    EGS_ADMIN_OBSERVER_MODE_REQ(),
    EGS_ADMIN_OBSERVER_MODE_ACK(),
//#endif SERV_OBSERVER_PVP_INTRUDE_MODE
    //}}

    //{{ 2012. 11. 20	박세훈	영웅 대전 참가자 관리용 리스트
//#ifdef SERV_HERO_PVP_MANAGE_LIST
    EGS_ADMIN_HERO_PVP_USER_LIST_REQ(),
    EGS_ADMIN_HERO_PVP_USER_LIST_ACK(),

    EGS_ADMIN_NOTIFY_HERO_PVP_USER_REQ(),
    EGS_ADMIN_NOTIFY_HERO_PVP_USER_ACK(),
    EGS_ADMIN_NOTIFY_HERO_PVP_USER_NOT(),
//#endif SERV_HERO_PVP_MANAGE_LIST
    //}}

    //{{ 2013. 01. 09 던전 강퇴 시스템 - 김민성
//#ifdef SERV_DUNGEON_FORCED_EXIT_SYSTEM
    EGS_BAD_ATTITUDE_USER_CHECK_INFO_NOT(966),
    EGS_BAD_ATTITUDE_USER_NOT(967),
    EGS_FORCED_EXIT_VOTE_REQ(968),
    EGS_FORCED_EXIT_VOTE_ACK(969),
    EGS_BAD_ATTITUDE_USER_MSG_NOT(970),
    EGS_DEFENCE_DUNGEON_WAVE_ID_NOT(971),
//#endif SERV_DUNGEON_FORCED_EXIT_SYSTEM
    //}

    //{{ 2013. 01. 21  대규모 이벤트 보상 시 최초 선택 캐릭터에게 지급하는 시스템 - 김민성
//#ifdef SERV_FIRST_SELECT_UNIT_REWARD_SYSTEM
    EGS_EXIST_FIRST_SELECT_UNIT_REWARD_NOT(972),
//#endif SERV_FIRST_SELECT_UNIT_REWARD_SYSTEM
    //}
    //{{ 2013. 02. 01  이벤트 발렌타인 던전 - 김민성
//#ifdef SERV_EVENT_VALENTINE_DUNGEON
    EGS_SYNC_DUNGEON_TIMER_NOT(973),
//#endif SERV_EVENT_VALENTINE_DUNGEON
    //}

    //{{ 2013. 02. 07   플루오르 스톤 강화 이벤트 실시간 적용 - 김민성
//#ifdef SERV_SUPPORT_MATERIAL_ENCHANT_EVENT
    EGS_SUPPORT_MATERIAL_EVENT_TIME_REQ(974),
    EGS_SUPPORT_MATERIAL_EVENT_TIME_ACK(975),
//#endif SERV_SUPPORT_MATERIAL_ENCHANT_EVENT
    //}

    //{{ 2013. 03. 12	최육사	몬스터 유효 검사
//#ifdef SERV_CHECK_EXIST_MONSTER_UID
    EGS_CHECK_EXIST_MONSTER_UID_REQ(976),
    EGS_CHECK_EXIST_MONSTER_UID_ACK(977),
//#endif SERV_CHECK_EXIST_MONSTER_UID
    //}}

    //{{ 2013. 02. 15   필드 중간 보스 - 김민성
//#ifdef SERV_BATTLEFIELD_MIDDLE_BOSS
    EGS_NPC_UNIT_CREATE_MIDDLE_BOSS_NOT(978),
    EGS_ADMIN_BATTLE_FIELD_INCREASE_DANGER_REQ(979),
    EGS_ADMIN_BATTLE_FIELD_INCREASE_DANGER_ACK(980),
    EGS_SYNC_BATTLE_FIELD_DAMAGED_MAP_REQ(981),
    EGS_SYNC_BATTLE_FIELD_DAMAGED_MAP_ACK(982),
    EGS_SYNC_BATTLE_FIELD_DAMAGED_MAP_NOT(983),
    EGS_BATTLE_FIELD_NPC_DAMAGED_MAP_REQ(984),
    EGS_BATTLE_FIELD_NPC_DAMAGED_MAP_ACK(985),
//#endif SERV_BATTLEFIELD_MIDDLE_BOSS
    //}

//#ifdef SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK
    EGS_SYSTEM_INFO(993),
    EGS_TCP_PING(994),
    EGS_KOG_GAME_PERFORMANCE_VILLAGE_LOG(995),
    EGS_KOG_GAME_PERFORMANCE_FIELD_LOG(996),
    EGS_KOG_GAME_PERFORMANCE_DUNGEON_LOG(997),
    EGS_KOG_GAME_PERFORMANCE_PVP_LOG(998),
//#endif//SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK

//#ifdef SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK_VER2
    EGS_GET_ACTIVE_LAGCHECK_REQ(999),
    EGS_GET_ACTIVE_LAGCHECK_ACK(1000),
//#endif//SERV_ACTIVE_KOG_GAME_PERFORMANCE_CHECK_VER2

//#ifdef SERV_OPTIMIZE_TCP_RELAY_TEST
//	EGS_TCP_RELAY_TEST(),
//	EGS_TCP_RELAY_TEST2(),
//#endif//SERV_OPTIMIZE_TCP_RELAY_TEST


//{{ 2012. 11. 20	박세훈	영웅 대전 참가자 관리용 리스트
//#ifdef SERV_HERO_PVP_MANAGE_LIST
    EGS_ADMIN_HERO_PVP_USER_ADD_REQ(),
    EGS_ADMIN_HERO_PVP_USER_ADD_ACK(),

    EGS_ADMIN_HERO_PVP_USER_REMOVE_REQ(),
    EGS_ADMIN_HERO_PVP_USER_REMOVE_ACK(),

    EGS_ADMIN_HERO_PVP_USER_CONNECTION_NOT(),
//#endif SERV_HERO_PVP_MANAGE_LIST
//}}

//#ifdef SERV_KOM_FILE_CHECK_ADVANCED
    EGS_KOM_FILE_CHECK_LOG_REQ(1147),
    EGS_KOM_FILE_CHECK_LOG_ACK(1148),
    //#endif SERV_KOM_FILE_CHECK_ADVANCED

//#ifdef SERV_ENTRY_POINT
    EGS_CHARACTER_LIST_REQ(1157), // 게임 서버에 캐릭터 리스트 요청
    // itemdata 1206
    EGS_CHARACTER_LIST_1ST_ACK(1158), // 첫번째 서버군의 캐릭터 결과
    EGS_CHARACTER_LIST_2ND_REQ(1159), // 두번째 서버군으로 요청
    EGS_CHARACTER_LIST_ACK(1160), // 두 서버군의 캐릭터 리스트 합
    EGS_CREATE_NEW_UNIT_REQ(1161), //
    EGS_ENTRY_POINT_DELETE_UNIT_REQ(1162),
    EGS_ENTRY_POINT_CHECK_NICK_NAME_REQ(1163),
    EGS_ENTRY_POINT_CHECK_NICK_NAME_ACK(1164),
    EGS_GET_CREATE_UNIT_TODAY_COUNT_REQ(1165),
    EGS_GET_CREATE_UNIT_TODAY_COUNT_1ST_ACK(1166),
    //EGS_GET_CREATE_UNIT_TODAY_COUNT_2ND_REQ(),
    EGS_GET_CREATE_UNIT_TODAY_COUNT_ACK(),
    EGS_ENTRY_POINT_GET_CHANNEL_LIST_REQ(),
    EGS_ENTRY_POINT_GET_CHANNEL_LIST_ACK(),
    EGS_ENTRY_POINT_CHANGE_NICK_NAME_REQ(),
    EGS_GET_SECOND_SECURITY_INFO_REQ(),
    EGS_GET_SECOND_SECURITY_INFO_ACK(),
//#endif SERV_ENTRY_POINT

//#ifdef SERV_NAVER_CHANNELING
    EGS_GET_NAVER_ACCESS_TOKEN_REQ(1171),
    EGS_GET_NAVER_ACCESS_TOKEN_ACK(1172),
//#endif SERV_NAVER_CHANNELING

    EGS_CLIENT_EVENT_ID_END(1173),

    ////////////////////////EventID_Client_global start/////////////////////

    //ENUM_MY_EVENT_ID(),

    //--------------------------------
    //#ifdef SERV_GLOBAL_AUTH
    ECH_SECURITY_AUTH_REQ(1174),
    ECH_SECURITY_AUTH_ACK(1175),

    ECH_SECURITY_INFO_NOT(1176),	// 서버에서 보안관련 정보 변경 알려주기 위해 필요
    //#endif SERV_GLOBAL_AUTH
    //--------------------------------

    //--------------------------------
    //#ifdef SERV_GLOBAL_BILLING
    //{{ 2011. 02. 28	최육사	중국 자이언트 빌링
    EGS_USE_GIANT_CARD_REQ(1177),
    EGS_USE_GIANT_CARD_ACK(1178),

    EGS_EXCHANGE_CASH_REQ(1179),
    EGS_EXCHANGE_CASH_ACK(1180),

    //#ifdef SERV_SUPPORT_SEVERAL_CASH_TYPES
    EGS_BONUS_CASH_EVENT_NOT(1181), // 2011.10.04 lygan_조성욱 //보너스 캐쉬 증정 이벤트를 알리는 패킷
    //#endif //SERV_SUPPORT_SEVERAL_CASH_TYPES
    //}}

    EGS_BILL_PRODUCT_INFO_REQ(1182),
    EGS_BILL_PRODUCT_INFO_ACK(1183),

    EGS_BILL_INVENTORY_INQUIRY_REQ(1184),
    EGS_BILL_INVENTORY_INQUIRY_ACK(1185),

    EGS_BILL_GET_PURCHASED_CASH_ITEM_REQ(1186),
    EGS_BILL_GET_PURCHASED_CASH_ITEM_ACK(1187),

    //#ifdef SERV_GOLD_TICKET
    EGS_CHARGE_POINT_NOT(1188),
    EGS_CHECK_GOLD_TICKET_KEY_NOT(1189),	// 구조체 없이 int 값 하나만 씀
    //#endif SERV_GOLD_TICKET
    //#endif // SERV_GLOBAL_BILLING
    //--------------------------------

    //#ifdef SERV_NEW_PVPROOM_PROCESS
    EGS_CHANGE_PVP_ROOM_PUBLIC_REQ(1190),
    EGS_CHANGE_PVP_ROOM_PUBLIC_ACK(1191),
    EGS_CHANGE_PVP_ROOM_PUBLIC_NOT(1192),
    EGS_CHANGE_PVP_ROOM_NAME_REQ(1193),
    EGS_CHANGE_PVP_ROOM_NAME_ACK(1194),
    EGS_CHANGE_PVP_ROOM_NAME_NOT(1195),
    //#endif SERV_NEW_PVPROOM_PROCESS

    //ifdef SERV_DELETE_GUILD_ADD_CHEAT
    EGS_ADMIN_DELETE_GUILD_ADD_NOT(1196),
    //endif

    //#ifdef SERV_DELETE_HENIR_RANKING
    EGS_ADMIN_DELETE_HENIR_RANKING_RANK_NOT(1197),
    EGS_ADMIN_DELETE_HENIR_RANKING_NICKNAME_NOT(1198),
    EGS_ADMIN_DELETE_HENIR_RANKING_UNITUID_NOT(1199),
    //#endif

    //#ifdef SERV_NEW_UNIT_TRADE_LIMIT
    EGS_NEW_CHARACTER_TRADE_BLOCK_MSG_NOT(1200),
    //#endif SERV_NEW_UNIT_TRADE_LIMIT

    //{{ 2011.05.05 lygan_조성욱 // 중국 전용 커뮤니티 탭 유저 정보보기
    //#ifdef SERV_USER_WATCH_NEW
    EGS_USER_COMMUNITY_SURVEY_NEW_REQ(1201),
    EGS_USER_COMMUNITY_SURVEY_NEW_ACK(1202),
    //endif SERV_USER_WATCH_NEW
    //}}

    //#ifdef SERV_NPROTECT_CS_AUTH_30
    EGS_NPROTECT_CSAUTH3_CHECK_NOT(1203),
    EGS_NPROTECT_CSAUTH3_RESPONE_NOT(1204),
    EGS_NPROTECT_CSAUTH3_GAMEHACK_REPORT_NOT(1205),
    //#endif SERV_NPROTECT_CS_AUTH_30

    //#ifdef SERV_PVP_REMATCH
    EGS_PVP_REMATCH_REQ(1206),
    EGS_PVP_REMATCH_ACK(1207),
    EGS_PVP_REMATCH_NOT(),
    //#endif SERV_PVP_REMATCH

    //{{ 2012.02.20 조효진	캐릭터 삭제 프로세스 변경 (삭제 대기 기간 도입)
    //#ifdef SERV_UNIT_WAIT_DELETE
    EGS_RESTORE_UNIT_REQ(),
    EGS_RESTORE_UNIT_ACK(1210),
    EGS_FINAL_DELETE_UNIT_REQ(1211),
    EGS_FINAL_DELETE_UNIT_ACK(1212),
    //#endif SERV_UNIT_WAIT_DELETE
    //}}

    //{{ 2011.03.16   임규수 아바타 분해 시스템
    //#ifdef SERV_MULTI_RESOLVE
    EGS_RESOLVE_ITEM_AVATAR_REQ(1213),
    EGS_RESOLVE_ITEM_AVATAR_ACK(1214),
    //#endif SERV_MULTI_RESOLVE
    //}}

    //{{ 2011.05.04   임규수 아바타 합성 시스템
    //#ifdef SERV_SYNTHESIS_AVATAR
    EGS_SYNTHESIS_SOCKET_GROUPID_REQ(1215),	// 구조체 없음
    EGS_SYNTHESIS_SOCKET_GROUPID_ACK(1216),

    EGS_SYNTHESIS_ITEM_REQ(1217),
    EGS_SYNTHESIS_ITEM_ACK(1218),
    //#endif SERV_SYNTHESIS_AVATAR

    //{{ 2011. 12. 09	박교현		서버군 리스트
    //#ifdef SERVER_GROUP_UI_ADVANCED
    ECH_GET_SERVERGROUP_LIST_REQ(1219),
    ECH_GET_SERVERGROUP_LIST_ACK(1220),
    ECH_GET_SERVERGROUP_LIST_NOT(1221),
    //#endif SERVER_GROUP_UI_ADVANCED
    //}}

    //{{ 박교현 : [2010/03/09] //	중국 중독방지 방침미 시스템
    //#ifdef SERV_ANTI_ADDICTION_SYSTEM
    EGS_ANTI_ADDICTION_NOT(1222),
    //#endif SERV_ANTI_ADDICTION_SYSTEM
    //}}
    //#ifdef SERV_EPAY_SYSTEM
    EGS_EPAY_INFO_NOT(1223),
    //#endif //SERV_EPAY_SYSTEM

    //#ifdef SERV_IDENTITY_CONFIRM_POPUP_MESSAGE
    EGS_IDENTITY_CONFIRM_POPUP_MESSAGE_NOT(1224),
    //#endif //SERV_IDENTITY_CONFIRM_POPUP_MESSAGE

    //#ifdef SERV_USE_XTRAP
    EGS_XTRAP_REQ(1225),
    EGS_XTRAP_ACK(1226),
    //#endif SERV_USE_XTRAP

    //#ifdef SERV_INVISIBLE_GM
    EGS_TOGGLE_INVISIBLE_REQ(1227),
    EGS_TOGGLE_INVISIBLE_NOT(1228),
    //#endif SERV_INVISIBLE_GM

    //#ifdef SERV_CATCH_HACKUSER_INFO
    EGS_CATCH_HACKUSER_INFO_NOT(1229),
    //#endif SERV_CATCH_HACKUSER_INFO

    //#ifdef SERV_SHARING_BANK_TEST
    EGS_GET_SHARE_BANK_REQ(1230),
    EGS_GET_SHARE_BANK_ACK(1231),
    //EGS_CLOSE_BANK_NOT(),		// -- 필요 없는 기능이다.
    EGS_UPDATE_ITEM_POSITION_NOT(1232),
    //#endif SERV_SHARING_BANK_TEST
    //#ifdef SERV_SHARE_BANK_WAIT_SERVER_RECIEVE
    EGS_SHARE_BANK_UPDATE_OK_NOT(1233),
    //#endif SERV_SHARE_BANK_WAIT_SERVER_RECIEVE
    //#ifdef SERV_SHARING_BANK_QUEST_CASH
    EGS_SHARING_BACK_OPEN_NOT(1234),
    //#endif SERV_SHARING_BANK_QUEST_CASH

    //#ifdef SERV_ADVERTISEMENT_EVENT
    EGS_ADVERTISEMENT_EVENT_INFO_NOT(1235),
    EGS_GET_ADVERTISEMENT_EVENT_REQ(1236),
    EGS_GET_ADVERTISEMENT_EVENT_ACK(1237),
    //#endif SERV_ADVERTISEMENT_EVENT

    //#ifdef SERV_ADD_WARP_BUTTON // COBO MAP MOVE
    EGS_WARP_BY_BUTTON_REQ(1238),
    EGS_WARP_BY_BUTTON_ACK(1239),
    //#endif // SERV_ADD_WARP_BUTTON

    //#ifdef SERV_NEW_EVENT_TYPES
    EGS_UPDATE_MAX_LEVEL_NOT(1240),
    EGS_UPDATE_DUNGEON_STATUS_NOT(1241),
    //#endif SERV_NEW_EVENT_TYPES

    //#ifdef SERV_CODE_EVENT
    EGS_UPDATE_CODE_EVENT_NOT(1242),
    //#endif SERV_CODE_EVENT

    //#ifdef SERV_ADD_WARP_BUTTON
    EGS_UPDATE_WARP_VIP_NOT(1243),
    //#endif // SERV_ADD_WARP_BUTTON

    //#ifdef SERV_CLIENT_DIRECT_CONNECT_AUTH_PCBANG
    EGS_CLIENT_DIRECT_CONNECT_AUTH_PCBAG_REQ(1244),
    EGS_CLIENT_DIRECT_CONNECT_AUTH_PCBAG_ACK(1245),
    //#endif //SERV_CLIENT_DIRECT_CONNECT_AUTH_PCBANG

    //#ifdef SERV_DEVELOPER_RANDOM_OPEN_ITEM_LOG
    EGS_OPEN_RANDOM_ITEM_DEVELOPER_REQ(1246),
    EGS_OPEN_RANDOM_ITEM_DEVELOPER_ACK(1247),
    //#endif//SERV_DEVELOPER_RANDOM_OPEN_ITEM_LOG

    //#ifdef SERV_CLIENT_PORT_CHANGE_REQUEST_LOG
    EGS_CLIENT_POPRT_CHANGE_REQUEST_INFO_NOT(1248),
    //#endif //SERV_CLIENT_PORT_CHANGE_REQUEST_LOG

    //#ifdef SERV_CHECK_TIME_QUEST
    EGS_EVENT_QUEST_CHECK_FOR_ADMIN_NOT(1249),
    //#endif // SERV_CHECK_TIME_QUEST

    //{{ 2012. 01. 20  박진웅 스킬사용 퀘스트
    //#ifdef SERV_SKILL_USE_SUBQUEST
    EGS_SKILL_USE_REQ(1250),
    //#endif SERV_SKILL_USE_SUBQUEST
    //}}

//#ifdef SERV_READY_TO_SOSUN_EVENT
    EGS_READY_TO_SOSUN_EVENT_REQ(1251),
    EGS_READY_TO_SOSUN_EVENT_ACK(1252),
//#endif SERV_READY_TO_SOSUN_EVENT

//#ifdef SERV_MOMOTI_EVENT
    EGS_MOMOTI_QUIZ_EVENT_REQ(1253),
    EGS_MOMOTI_QUIZ_EVENT_ACK(1254),
//#endif SERV_MOMOTI_EVENT

    //김준환 서버시간 받아오기
    //#ifdef SERV_SERVER_TIME_GET
    ECH_GET_SERVER_TIME_REQ(1255),
    ECH_GET_SERVER_TIME_ACK(1256),
    //#endif SERV_SERVER_TIME_GET

    //#ifdef SERV_POINT_COUNT_SYSTEM
    EGS_QUEST_POINT_COUNT_SYSTEM_NOT(1257),	// 2013.04.09 lygan_조성욱 // 포인트가 갱신되면 subquest에서 포인트를 사용하는 퀘스트 전부를 갱신해줘야 하는 용도
    //#endif //SERV_POINT_COUNT_SYSTEM

    //#ifdef SERV_COUNTRY_PH
    EGS_EXCHANGE_CASH_CLIENT_NOT(1258),
    //#endif //SERV_COUNTRY_PH

//#ifdef SERV_GATE_OF_DARKNESS_SUPPORT_EVENT
    EGS_GOD_SUPPORT_EVENT_TIME_NOT(1259),
//#endif SERV_GATE_OF_DARKNESS_SUPPORT_EVENT

//#ifdef SERV_RELATIONSHIP_EVENT_INT
    EGS_USE_PROPOSE_ITEM_REQ(1260),
    EGS_USE_PROPOSE_ITEM_ACK(1261),
    EGS_EVENT_PROPOSE_NOT(1262),
    EGS_EVENT_PROPOSE_ACK(1263),
    EGS_EVENT_PROPOSE_AGREE_NOT(1264),
    EGS_EVENT_PROPOSE_RESULT_NOT(1265),
    EGS_EVENT_PROPOSE_RESULT_ACCEPTOR_NOT(1266),
    EGS_USE_DIVORCE_ITEM_REQ(1267),
    EGS_USE_DIVORCE_ITEM_ACK(1268),
    EGS_DIVORCE_NOT(1269),
//#endif SERV_RELATIONSHIP_EVENT_INT

//#ifdef SERV_HALLOWEEN_PUMPKIN_FAIRY_PET
    EGS_CHANGE_PET_ID_NOT(1270),
//#endif //SERV_HALLOWEEN_PUMPKIN_FAIRY_PET

//#ifdef SERV_CHINA_SPIRIT_EVENT
    EGS_USE_SPIRIT_REWARD_REQ(1271),
    EGS_USE_SPIRIT_REWARD_ACK(1272),
//#endif //SERV_CHINA_SPIRIT_EVENT

//#ifdef SERV_PERIOD_PET
    EGS_RELEASE_PET_ACK(1273),
    EGS_RELEASE_PET_NOT(1274),
//#endif SERV_PERIOD_PET

//#ifdef SERV_BLOCK_LIST_SHOW_DISCONNECT_REASON
    EGS_SHOW_DISCONNECT_REASON_NOT(1275),
//#endif SERV_BLOCK_LIST_SHOW_DISCONNECT_REASON

//#ifdef SERV_CUBE_IN_ITEM_MAPPING
    EGS_CUBE_IN_ITEM_MAPPING_NOT(1276),
//#endif //SERV_CUBE_IN_ITEM_MAPPING

//#ifdef SERV_RECRUIT_EVENT_BASE
    EGS_USE_RECRUIT_TICKET_REQ(1277),
    EGS_USE_RECRUIT_TICKET_ACK(1278),
    EGS_REGISTER_RECRUITER_REQ(1279),
    EGS_REGISTER_RECRUITER_ACK(1280),
    EGS_REGISTER_RECRUITER_NOT(1281),
    EGS_RECRUIT_RECRUITER_INFO_NOT(1282),		// 추천인/피추천인의 상태변화를 등록된 피추천인/추천인에게 보내주는 패킷

    EGS_GET_RECRUIT_RECRUITER_LIST_REQ(1283),	// 추천인/피추천인 리스트를 요청하는 패킷
    EGS_GET_RECRUIT_RECRUITER_LIST_ACK(1284),	// 추천인/피추천인 리스트
//#endif SERV_RECRUIT_EVENT_BASE

//#ifdef SERV_EVENT_CHARACTER_QUEST_RANKING
    EGS_GET_EVENT_INFO_REQ(1285),
    EGS_GET_EVENT_INFO_ACK(1286),
//#endif SERV_EVENT_CHARACTER_QUEST_RANKING

//#ifdef SERV_EVENT_DB_CONTROL_SYSTEM
    ESG_REWARD_DB_DATA_NOT(1287),
//#endif //SERV_EVENT_DB_CONTROL_SYSTEM

//#ifdef SERV_ELESIS_UPDATE_EVENT
    EGS_EVENT_NOTE_VIEW_REQ(1288),
    EGS_EVENT_NOTE_VIEW_ACK(1289),
//#endif SERV_ELESIS_UPDATE_EVENT

//#ifdef SERV_GLOBAL_MISSION_MANAGER
    EGS_GLOBAL_MISSION_UPDATE_NOT(1290),
//#endif SERV_GLOBAL_MISSION_MANAGER

//#ifdef SERV_UNLIMITED_SECOND_CHANGE_JOB
    EGS_UNLIMITED_SECOND_CHANGE_JOB_NOT(1295),
//#endif SERV_UNLIMITED_SECOND_CHANGE_JOB

//#ifdef SERV_EVENT_CHECK_POWER
    EGS_START_CHECK_POWER_REQ(1296),
    EGS_START_CHECK_POWER_ACK(1297),
    EGS_UPDATE_CHECK_POWER_NOT(1298),
    EGS_SET_MULTIPLYER(1299),
    EGS_CHECK_POWER_RESULT_NOT(1300),
//#endif SERV_EVENT_CHECK_POWER

// 2012. 09. 26 김석근
//#ifdef SERV_ITEM_ACTION_BY_DBTIME_SETTING
    EGS_BUY_UI_SETTING_REQ(),
    EGS_BUY_UI_SETTING_ACK(),
    EGS_GET_TIME_CONTROL_ITME_LIST_NOT(),
    EGS_GET_TIME_CONTROL_ITME_TALK_LIST_REQ(),
    EGS_GET_TIME_CONTROL_ITME_TALK_LIST_ACK(),
//#endif SERV_ITEM_ACTION_BY_DBTIME_SETTING
    //#ifdef SERV_EVENT_CHUNG_GIVE_ITEM
    EGS_EVENT_CHUNG_GIVE_ITEM_NOT(),
    EGS_EVENT_CHUNG_GIVE_ITEM_REQ(),
    EGS_EVENT_CHUNG_GIVE_ITEM_ACK(),
    //#endif SERV_EVENT_CHUNG_GIVE_ITEM
//#ifdef SERV_EVENT_COBO_DUNGEON_AND_FIELD
    EGS_EVENT_COBO_DUNGEON_FIELD_NOT(),
    EGS_EVENT_COBO_DUNGEON_FIELD_REQ(),
    EGS_EVENT_COBO_DUNGEON_FIELD_ACK(),
    EGS_EVENT_COBO_DUNGEON_CLEAR_COUNT_NOT(),
    EGS_EVENT_COBO_FIELD_MONSTER_KILL_NOT(),
    EGS_EVENT_COBO_ITEM_GIVE_CHEAT_NOT(),
//#endif SERV_EVENT_COBO_DUNGEON_AND_FIELD

//#ifdef SERV_EVENT_VALENTINE_DUNGEON_GIVE_ITEM
    EGS_EVENT_VALENTINE_DUNGEON_GIVE_ITEM_NOT(1315),
    EGS_EVENT_VALENTINE_DUNGEON_GIVE_ITEM_CHEAT_NOT(1316),
//#endif SERV_EVENT_VALENTINE_DUNGEON_GIVE_ITEM
//#ifdef SERV_ID_NETMARBLE_PCBANG
    ECH_PCBANG_IP_AND_MAC_INFO_NOT(1317),
//#endif //SERV_ID_NETMARBLE_PCBANG
//#ifdef SERV_MANUFACTURE_PERIOD_FIX
    EGS_MANUFACTURE_PERIOD_SETTING_REQ(1318),
    EGS_MANUFACTURE_PERIOD_SETTING_ACK(1319),
//#endif //SERV_MANUFACTURE_PERIOD_FIX

    //#ifdef SERV_DIRECT_CHARGE_ELSWORD_CASH
    EGS_CASH_DIRECT_CHARGE_CN_REQ(1320),
    EGS_CASH_DIRECT_CHARGE_CN_ACK(1321),
    EGS_CASH_DIRECT_CHARGE_CN_NOT(1322),
    //#endif // SERV_DIRECT_CHARGE_ELSWORD_CASH

    EGS_4TH_ANNIV_EVENT_REWARD_REQ(1323),
    EGS_4TH_ANNIV_EVENT_REWARD_ACK(1324),

    NO(9999),
    ;

    var op: Int = 0

    constructor() {
        this.op = 0xFFFF
    }

    constructor(o: Int) {
        this.op = o
    }

    companion object {

        private val spam = Arrays.asList<EventID?>(
            E_HEART_BEAT
        )

        private val opToEventIDMap: MutableMap<Int, EventID?> = HashMap()

        fun getEventIDByOp(op: Int): EventID? {
            return opToEventIDMap.getOrDefault(op, null)
        }

        fun isSpam(inHeaderByOp: EventID?): Boolean {
            return spam.contains(inHeaderByOp)
        }

        fun reload() {
            opToEventIDMap.clear()
            for (ih in values()) {
                opToEventIDMap.put(ih.op, ih)
            }
        }

        init {
            opToEventIDMap.clear()
            for (ih in values()) {
                opToEventIDMap.put(ih.op, ih)
            }
        }
    }
}